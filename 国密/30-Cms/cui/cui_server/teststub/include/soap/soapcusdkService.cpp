/* soapcusdkService.cpp
   Generated by gSOAP 2.8.0 from cusdk.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapcusdkService.h"

cusdkService::cusdkService()
{	cusdkService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

cusdkService::cusdkService(const struct soap &_soap) :soap(_soap)
{ }

cusdkService::cusdkService(soap_mode iomode)
{	cusdkService_init(iomode, iomode);
}

cusdkService::cusdkService(soap_mode imode, soap_mode omode)
{	cusdkService_init(imode, omode);
}

cusdkService::~cusdkService()
{ }

void cusdkService::cusdkService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"cusdk", "urn:cusdk", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
};

void cusdkService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

cusdkService *cusdkService::copy()
{	cusdkService *dup = SOAP_NEW_COPY(cusdkService(*(struct soap*)this));
	return dup;
}

int cusdkService::soap_close_socket()
{	return soap_closesock(this);
}

int cusdkService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int cusdkService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int cusdkService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int cusdkService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void cusdkService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void cusdkService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *cusdkService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void cusdkService::soap_noheader()
{	header = NULL;
}

int cusdkService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()))
				return this->error;
			(void)serve();
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET cusdkService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET cusdkService::accept()
{	return soap_accept(this);
}

int cusdkService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{	soap_begin(this);
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			this->error = SOAP_EOF;
			return soap_send_fault(this);
		}
#endif

		soap_begin(this);

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_recv(this))
		{	if (this->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(this);
#else 
				return soap_send_fault(this);
#endif
			}
			soap_closesock(this);

			continue;
		}

		if (soap_envelope_begin_in(this)
		 || soap_recv_header(this)
		 || soap_body_begin_in(this)
		 || dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve_cusdk__login(cusdkService*);
static int serve_cusdk__logout(cusdkService*);
static int serve_cusdk__SubscribePuStatus(cusdkService*);
static int serve_cusdk__UnsubscribePuStatus(cusdkService*);
static int serve_cusdk__GetNotify(cusdkService*);
static int serve_cusdk__GetCUIList(cusdkService*);
static int serve_cusdk__SetupStream(cusdkService*);
static int serve_cusdk__PlayStream(cusdkService*);
static int serve_cusdk__StopStream(cusdkService*);
static int serve_cusdk__PtzCtrl(cusdkService*);
static int serve_cusdk__PtzLock(cusdkService*);
static int serve_cusdk__PtzUnlock(cusdkService*);
static int serve_cusdk__SendTransData(cusdkService*);
static int serve_cusdk__GetUserInfo(cusdkService*);
static int serve_cusdk__GetUserGroupInfo(cusdkService*);
static int serve_cusdk__GetUserData(cusdkService*);
static int serve_cusdk__SetUserData(cusdkService*);
static int serve_cusdk__GetUserDevGroupByGroup(cusdkService*);
static int serve_cusdk__GetUserDevByGroup(cusdkService*);
static int serve_cusdk__GetUserDevGroup(cusdkService*);
static int serve_cusdk__GetDomainDevGroup(cusdkService*);
static int serve_cusdk__GetUserDev(cusdkService*);
static int serve_cusdk__GetUserDevByDomain(cusdkService*);
static int serve_cusdk__GetDeviceGroupDeviceRelations(cusdkService*);
static int serve_cusdk__CreateDeviceGroup(cusdkService*);
static int serve_cusdk__DelDeviceGroup(cusdkService*);
static int serve_cusdk__ModifyDeviceGroup(cusdkService*);
static int serve_cusdk__DeviceGroupAddDevice(cusdkService*);
static int serve_cusdk__DeviceGroupDelDevice(cusdkService*);
static int serve_cusdk__GetUserList(cusdkService*);
static int serve_cusdk__GetUserGroupList(cusdkService*);
static int serve_cusdk__CreateUserGroup(cusdkService*);
static int serve_cusdk__DelUserGroup(cusdkService*);
static int serve_cusdk__ModifyUserGroup(cusdkService*);
static int serve_cusdk__CreateUser(cusdkService*);
static int serve_cusdk__DelUser(cusdkService*);
static int serve_cusdk__ModifyUser(cusdkService*);
static int serve_cusdk__UserGetDeviceByGroup(cusdkService*);
static int serve_cusdk__UserAddDevice(cusdkService*);
static int serve_cusdk__UserDelDevice(cusdkService*);
static int serve_cusdk__UserModifyDevice(cusdkService*);
static int serve_cusdk__GetAuthorizationDevice(cusdkService*);
static int serve_cusdk__AddAuthorizationDevice(cusdkService*);
static int serve_cusdk__DelAuthorizationDevice(cusdkService*);
static int serve_cusdk__ModifyAuthorizationDevice(cusdkService*);
static int serve_cusdk__GetDeviceBaseInfo(cusdkService*);

int cusdkService::dispatch()
{	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "cusdk:login"))
		return serve_cusdk__login(this);
	if (!soap_match_tag(this, this->tag, "cusdk:logout"))
		return serve_cusdk__logout(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SubscribePuStatus"))
		return serve_cusdk__SubscribePuStatus(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UnsubscribePuStatus"))
		return serve_cusdk__UnsubscribePuStatus(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetNotify"))
		return serve_cusdk__GetNotify(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCUIList"))
		return serve_cusdk__GetCUIList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetupStream"))
		return serve_cusdk__SetupStream(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PlayStream"))
		return serve_cusdk__PlayStream(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopStream"))
		return serve_cusdk__StopStream(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzCtrl"))
		return serve_cusdk__PtzCtrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzLock"))
		return serve_cusdk__PtzLock(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzUnlock"))
		return serve_cusdk__PtzUnlock(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SendTransData"))
		return serve_cusdk__SendTransData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserInfo"))
		return serve_cusdk__GetUserInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserGroupInfo"))
		return serve_cusdk__GetUserGroupInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserData"))
		return serve_cusdk__GetUserData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetUserData"))
		return serve_cusdk__SetUserData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevGroupByGroup"))
		return serve_cusdk__GetUserDevGroupByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevByGroup"))
		return serve_cusdk__GetUserDevByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevGroup"))
		return serve_cusdk__GetUserDevGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDomainDevGroup"))
		return serve_cusdk__GetDomainDevGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDev"))
		return serve_cusdk__GetUserDev(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevByDomain"))
		return serve_cusdk__GetUserDevByDomain(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceGroupDeviceRelations"))
		return serve_cusdk__GetDeviceGroupDeviceRelations(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateDeviceGroup"))
		return serve_cusdk__CreateDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelDeviceGroup"))
		return serve_cusdk__DelDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyDeviceGroup"))
		return serve_cusdk__ModifyDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceGroupAddDevice"))
		return serve_cusdk__DeviceGroupAddDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceGroupDelDevice"))
		return serve_cusdk__DeviceGroupDelDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserList"))
		return serve_cusdk__GetUserList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserGroupList"))
		return serve_cusdk__GetUserGroupList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateUserGroup"))
		return serve_cusdk__CreateUserGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelUserGroup"))
		return serve_cusdk__DelUserGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyUserGroup"))
		return serve_cusdk__ModifyUserGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateUser"))
		return serve_cusdk__CreateUser(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelUser"))
		return serve_cusdk__DelUser(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyUser"))
		return serve_cusdk__ModifyUser(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGetDeviceByGroup"))
		return serve_cusdk__UserGetDeviceByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserAddDevice"))
		return serve_cusdk__UserAddDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserDelDevice"))
		return serve_cusdk__UserDelDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserModifyDevice"))
		return serve_cusdk__UserModifyDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetAuthorizationDevice"))
		return serve_cusdk__GetAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:AddAuthorizationDevice"))
		return serve_cusdk__AddAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelAuthorizationDevice"))
		return serve_cusdk__DelAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyAuthorizationDevice"))
		return serve_cusdk__ModifyAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceBaseInfo"))
		return serve_cusdk__GetDeviceBaseInfo(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve_cusdk__login(cusdkService *soap)
{	struct cusdk__login soap_tmp_cusdk__login;
	cusdk__LoginRsp loginRsp;
	loginRsp.soap_default(soap);
	soap_default_cusdk__login(soap, &soap_tmp_cusdk__login);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__login(soap, &soap_tmp_cusdk__login, "cusdk:login", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->login(soap_tmp_cusdk__login.loginReq, loginRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	loginRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || loginRsp.soap_put(soap, "cusdk:LoginRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || loginRsp.soap_put(soap, "cusdk:LoginRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__logout(cusdkService *soap)
{	struct cusdk__logout soap_tmp_cusdk__logout;
	cusdk__LogoutRsp logoutRsp;
	logoutRsp.soap_default(soap);
	soap_default_cusdk__logout(soap, &soap_tmp_cusdk__logout);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__logout(soap, &soap_tmp_cusdk__logout, "cusdk:logout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->logout(soap_tmp_cusdk__logout.logoutReq, logoutRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	logoutRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || logoutRsp.soap_put(soap, "cusdk:LogoutRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || logoutRsp.soap_put(soap, "cusdk:LogoutRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SubscribePuStatus(cusdkService *soap)
{	struct cusdk__SubscribePuStatus soap_tmp_cusdk__SubscribePuStatus;
	cusdk__SubscribePuStatusRsp subscribePuStatusRsp;
	subscribePuStatusRsp.soap_default(soap);
	soap_default_cusdk__SubscribePuStatus(soap, &soap_tmp_cusdk__SubscribePuStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SubscribePuStatus(soap, &soap_tmp_cusdk__SubscribePuStatus, "cusdk:SubscribePuStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SubscribePuStatus(soap_tmp_cusdk__SubscribePuStatus.subscribePuStatusReq, subscribePuStatusRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	subscribePuStatusRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || subscribePuStatusRsp.soap_put(soap, "cusdk:SubscribePuStatusRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || subscribePuStatusRsp.soap_put(soap, "cusdk:SubscribePuStatusRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UnsubscribePuStatus(cusdkService *soap)
{	struct cusdk__UnsubscribePuStatus soap_tmp_cusdk__UnsubscribePuStatus;
	cusdk__UnsubscribePuStatusRsp unsubscribePuStatusRsp;
	unsubscribePuStatusRsp.soap_default(soap);
	soap_default_cusdk__UnsubscribePuStatus(soap, &soap_tmp_cusdk__UnsubscribePuStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UnsubscribePuStatus(soap, &soap_tmp_cusdk__UnsubscribePuStatus, "cusdk:UnsubscribePuStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UnsubscribePuStatus(soap_tmp_cusdk__UnsubscribePuStatus.unsubscribePuStatusReq, unsubscribePuStatusRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	unsubscribePuStatusRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || unsubscribePuStatusRsp.soap_put(soap, "cusdk:UnsubscribePuStatusRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || unsubscribePuStatusRsp.soap_put(soap, "cusdk:UnsubscribePuStatusRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetNotify(cusdkService *soap)
{	struct cusdk__GetNotify soap_tmp_cusdk__GetNotify;
	cusdk__GetNotifyRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetNotify(soap, &soap_tmp_cusdk__GetNotify);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetNotify(soap, &soap_tmp_cusdk__GetNotify, "cusdk:GetNotify", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetNotify(soap_tmp_cusdk__GetNotify.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetNotifyRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetNotifyRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCUIList(cusdkService *soap)
{	struct cusdk__GetCUIList soap_tmp_cusdk__GetCUIList;
	cusdk__GetCUIListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCUIList(soap, &soap_tmp_cusdk__GetCUIList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCUIList(soap, &soap_tmp_cusdk__GetCUIList, "cusdk:GetCUIList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCUIList(soap_tmp_cusdk__GetCUIList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCUIListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCUIListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetupStream(cusdkService *soap)
{	struct cusdk__SetupStream soap_tmp_cusdk__SetupStream;
	cusdk__SetupStreamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetupStream(soap, &soap_tmp_cusdk__SetupStream);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetupStream(soap, &soap_tmp_cusdk__SetupStream, "cusdk:SetupStream", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetupStream(soap_tmp_cusdk__SetupStream.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetupStreamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetupStreamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PlayStream(cusdkService *soap)
{	struct cusdk__PlayStream soap_tmp_cusdk__PlayStream;
	cusdk__PlayStreamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PlayStream(soap, &soap_tmp_cusdk__PlayStream);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PlayStream(soap, &soap_tmp_cusdk__PlayStream, "cusdk:PlayStream", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PlayStream(soap_tmp_cusdk__PlayStream.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PlayStreamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PlayStreamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopStream(cusdkService *soap)
{	struct cusdk__StopStream soap_tmp_cusdk__StopStream;
	cusdk__StopStreamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopStream(soap, &soap_tmp_cusdk__StopStream);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopStream(soap, &soap_tmp_cusdk__StopStream, "cusdk:StopStream", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopStream(soap_tmp_cusdk__StopStream.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopStreamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopStreamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzCtrl(cusdkService *soap)
{	struct cusdk__PtzCtrl soap_tmp_cusdk__PtzCtrl;
	cusdk__PtzCtrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzCtrl(soap, &soap_tmp_cusdk__PtzCtrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzCtrl(soap, &soap_tmp_cusdk__PtzCtrl, "cusdk:PtzCtrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzCtrl(soap_tmp_cusdk__PtzCtrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzCtrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzCtrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzLock(cusdkService *soap)
{	struct cusdk__PtzLock soap_tmp_cusdk__PtzLock;
	cusdk__PtzLockRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzLock(soap, &soap_tmp_cusdk__PtzLock);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzLock(soap, &soap_tmp_cusdk__PtzLock, "cusdk:PtzLock", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzLock(soap_tmp_cusdk__PtzLock.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzLockRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzLockRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzUnlock(cusdkService *soap)
{	struct cusdk__PtzUnlock soap_tmp_cusdk__PtzUnlock;
	cusdk__PtzUnlockRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzUnlock(soap, &soap_tmp_cusdk__PtzUnlock);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzUnlock(soap, &soap_tmp_cusdk__PtzUnlock, "cusdk:PtzUnlock", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzUnlock(soap_tmp_cusdk__PtzUnlock.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzUnlockRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzUnlockRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SendTransData(cusdkService *soap)
{	struct cusdk__SendTransData soap_tmp_cusdk__SendTransData;
	cusdk__SendTransDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SendTransData(soap, &soap_tmp_cusdk__SendTransData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SendTransData(soap, &soap_tmp_cusdk__SendTransData, "cusdk:SendTransData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SendTransData(soap_tmp_cusdk__SendTransData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SendTransDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SendTransDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserInfo(cusdkService *soap)
{	struct cusdk__GetUserInfo soap_tmp_cusdk__GetUserInfo;
	cusdk__GetUserInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserInfo(soap, &soap_tmp_cusdk__GetUserInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserInfo(soap, &soap_tmp_cusdk__GetUserInfo, "cusdk:GetUserInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserInfo(soap_tmp_cusdk__GetUserInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserGroupInfo(cusdkService *soap)
{	struct cusdk__GetUserGroupInfo soap_tmp_cusdk__GetUserGroupInfo;
	cusdk__GetUserGroupInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserGroupInfo(soap, &soap_tmp_cusdk__GetUserGroupInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserGroupInfo(soap, &soap_tmp_cusdk__GetUserGroupInfo, "cusdk:GetUserGroupInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserGroupInfo(soap_tmp_cusdk__GetUserGroupInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserGroupInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserGroupInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserData(cusdkService *soap)
{	struct cusdk__GetUserData soap_tmp_cusdk__GetUserData;
	cusdk__GetUserDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserData(soap, &soap_tmp_cusdk__GetUserData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserData(soap, &soap_tmp_cusdk__GetUserData, "cusdk:GetUserData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserData(soap_tmp_cusdk__GetUserData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetUserData(cusdkService *soap)
{	struct cusdk__SetUserData soap_tmp_cusdk__SetUserData;
	cusdk__SetUserDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetUserData(soap, &soap_tmp_cusdk__SetUserData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetUserData(soap, &soap_tmp_cusdk__SetUserData, "cusdk:SetUserData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetUserData(soap_tmp_cusdk__SetUserData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetUserDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetUserDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevGroupByGroup(cusdkService *soap)
{	struct cusdk__GetUserDevGroupByGroup soap_tmp_cusdk__GetUserDevGroupByGroup;
	cusdk__GetUserDevGroupByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevGroupByGroup(soap, &soap_tmp_cusdk__GetUserDevGroupByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevGroupByGroup(soap, &soap_tmp_cusdk__GetUserDevGroupByGroup, "cusdk:GetUserDevGroupByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevGroupByGroup(soap_tmp_cusdk__GetUserDevGroupByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevGroupByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevGroupByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevByGroup(cusdkService *soap)
{	struct cusdk__GetUserDevByGroup soap_tmp_cusdk__GetUserDevByGroup;
	cusdk__GetUserDevByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevByGroup(soap, &soap_tmp_cusdk__GetUserDevByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevByGroup(soap, &soap_tmp_cusdk__GetUserDevByGroup, "cusdk:GetUserDevByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevByGroup(soap_tmp_cusdk__GetUserDevByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevGroup(cusdkService *soap)
{	struct cusdk__GetUserDevGroup soap_tmp_cusdk__GetUserDevGroup;
	cusdk__GetUserDevGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevGroup(soap, &soap_tmp_cusdk__GetUserDevGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevGroup(soap, &soap_tmp_cusdk__GetUserDevGroup, "cusdk:GetUserDevGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevGroup(soap_tmp_cusdk__GetUserDevGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDomainDevGroup(cusdkService *soap)
{	struct cusdk__GetDomainDevGroup soap_tmp_cusdk__GetDomainDevGroup;
	cusdk__GetDomainDevGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDomainDevGroup(soap, &soap_tmp_cusdk__GetDomainDevGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDomainDevGroup(soap, &soap_tmp_cusdk__GetDomainDevGroup, "cusdk:GetDomainDevGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDomainDevGroup(soap_tmp_cusdk__GetDomainDevGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDomainDevGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDomainDevGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDev(cusdkService *soap)
{	struct cusdk__GetUserDev soap_tmp_cusdk__GetUserDev;
	cusdk__GetUserDevRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDev(soap, &soap_tmp_cusdk__GetUserDev);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDev(soap, &soap_tmp_cusdk__GetUserDev, "cusdk:GetUserDev", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDev(soap_tmp_cusdk__GetUserDev.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevByDomain(cusdkService *soap)
{	struct cusdk__GetUserDevByDomain soap_tmp_cusdk__GetUserDevByDomain;
	cusdk__GetDevByDomainRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevByDomain(soap, &soap_tmp_cusdk__GetUserDevByDomain);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevByDomain(soap, &soap_tmp_cusdk__GetUserDevByDomain, "cusdk:GetUserDevByDomain", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevByDomain(soap_tmp_cusdk__GetUserDevByDomain.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDevByDomainRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDevByDomainRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceGroupDeviceRelations(cusdkService *soap)
{	struct cusdk__GetDeviceGroupDeviceRelations soap_tmp_cusdk__GetDeviceGroupDeviceRelations;
	cusdk__GetDeviceGroupDeviceRelationsRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceGroupDeviceRelations(soap, &soap_tmp_cusdk__GetDeviceGroupDeviceRelations);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceGroupDeviceRelations(soap, &soap_tmp_cusdk__GetDeviceGroupDeviceRelations, "cusdk:GetDeviceGroupDeviceRelations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceGroupDeviceRelations(soap_tmp_cusdk__GetDeviceGroupDeviceRelations.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceGroupDeviceRelationsRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceGroupDeviceRelationsRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateDeviceGroup(cusdkService *soap)
{	struct cusdk__CreateDeviceGroup soap_tmp_cusdk__CreateDeviceGroup;
	cusdk__CreateDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateDeviceGroup(soap, &soap_tmp_cusdk__CreateDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateDeviceGroup(soap, &soap_tmp_cusdk__CreateDeviceGroup, "cusdk:CreateDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateDeviceGroup(soap_tmp_cusdk__CreateDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelDeviceGroup(cusdkService *soap)
{	struct cusdk__DelDeviceGroup soap_tmp_cusdk__DelDeviceGroup;
	cusdk__DelDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelDeviceGroup(soap, &soap_tmp_cusdk__DelDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelDeviceGroup(soap, &soap_tmp_cusdk__DelDeviceGroup, "cusdk:DelDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelDeviceGroup(soap_tmp_cusdk__DelDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyDeviceGroup(cusdkService *soap)
{	struct cusdk__ModifyDeviceGroup soap_tmp_cusdk__ModifyDeviceGroup;
	cusdk__ModifyDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyDeviceGroup(soap, &soap_tmp_cusdk__ModifyDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyDeviceGroup(soap, &soap_tmp_cusdk__ModifyDeviceGroup, "cusdk:ModifyDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyDeviceGroup(soap_tmp_cusdk__ModifyDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceGroupAddDevice(cusdkService *soap)
{	struct cusdk__DeviceGroupAddDevice soap_tmp_cusdk__DeviceGroupAddDevice;
	cusdk__DeviceGroupAddDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceGroupAddDevice(soap, &soap_tmp_cusdk__DeviceGroupAddDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceGroupAddDevice(soap, &soap_tmp_cusdk__DeviceGroupAddDevice, "cusdk:DeviceGroupAddDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceGroupAddDevice(soap_tmp_cusdk__DeviceGroupAddDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceGroupAddDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceGroupAddDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceGroupDelDevice(cusdkService *soap)
{	struct cusdk__DeviceGroupDelDevice soap_tmp_cusdk__DeviceGroupDelDevice;
	cusdk__DeviceGroupDelDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceGroupDelDevice(soap, &soap_tmp_cusdk__DeviceGroupDelDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceGroupDelDevice(soap, &soap_tmp_cusdk__DeviceGroupDelDevice, "cusdk:DeviceGroupDelDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceGroupDelDevice(soap_tmp_cusdk__DeviceGroupDelDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceGroupDelDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceGroupDelDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserList(cusdkService *soap)
{	struct cusdk__GetUserList soap_tmp_cusdk__GetUserList;
	cusdk__GetUserListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserList(soap, &soap_tmp_cusdk__GetUserList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserList(soap, &soap_tmp_cusdk__GetUserList, "cusdk:GetUserList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserList(soap_tmp_cusdk__GetUserList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserGroupList(cusdkService *soap)
{	struct cusdk__GetUserGroupList soap_tmp_cusdk__GetUserGroupList;
	cusdk__GetUserGroupListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserGroupList(soap, &soap_tmp_cusdk__GetUserGroupList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserGroupList(soap, &soap_tmp_cusdk__GetUserGroupList, "cusdk:GetUserGroupList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserGroupList(soap_tmp_cusdk__GetUserGroupList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserGroupListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserGroupListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateUserGroup(cusdkService *soap)
{	struct cusdk__CreateUserGroup soap_tmp_cusdk__CreateUserGroup;
	cusdk__CreateUserGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateUserGroup(soap, &soap_tmp_cusdk__CreateUserGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateUserGroup(soap, &soap_tmp_cusdk__CreateUserGroup, "cusdk:CreateUserGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateUserGroup(soap_tmp_cusdk__CreateUserGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateUserGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateUserGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelUserGroup(cusdkService *soap)
{	struct cusdk__DelUserGroup soap_tmp_cusdk__DelUserGroup;
	cusdk__DelUserGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelUserGroup(soap, &soap_tmp_cusdk__DelUserGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelUserGroup(soap, &soap_tmp_cusdk__DelUserGroup, "cusdk:DelUserGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelUserGroup(soap_tmp_cusdk__DelUserGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelUserGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelUserGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyUserGroup(cusdkService *soap)
{	struct cusdk__ModifyUserGroup soap_tmp_cusdk__ModifyUserGroup;
	cusdk__ModifyUserGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyUserGroup(soap, &soap_tmp_cusdk__ModifyUserGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyUserGroup(soap, &soap_tmp_cusdk__ModifyUserGroup, "cusdk:ModifyUserGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyUserGroup(soap_tmp_cusdk__ModifyUserGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyUserGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyUserGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateUser(cusdkService *soap)
{	struct cusdk__CreateUser soap_tmp_cusdk__CreateUser;
	cusdk__CreateUserRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateUser(soap, &soap_tmp_cusdk__CreateUser);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateUser(soap, &soap_tmp_cusdk__CreateUser, "cusdk:CreateUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateUser(soap_tmp_cusdk__CreateUser.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateUserRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateUserRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelUser(cusdkService *soap)
{	struct cusdk__DelUser soap_tmp_cusdk__DelUser;
	cusdk__DelUserRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelUser(soap, &soap_tmp_cusdk__DelUser);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelUser(soap, &soap_tmp_cusdk__DelUser, "cusdk:DelUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelUser(soap_tmp_cusdk__DelUser.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelUserRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelUserRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyUser(cusdkService *soap)
{	struct cusdk__ModifyUser soap_tmp_cusdk__ModifyUser;
	cusdk__ModifyUserRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyUser(soap, &soap_tmp_cusdk__ModifyUser);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyUser(soap, &soap_tmp_cusdk__ModifyUser, "cusdk:ModifyUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyUser(soap_tmp_cusdk__ModifyUser.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyUserRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyUserRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGetDeviceByGroup(cusdkService *soap)
{	struct cusdk__UserGetDeviceByGroup soap_tmp_cusdk__UserGetDeviceByGroup;
	cusdk__UserGetDeviceByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGetDeviceByGroup(soap, &soap_tmp_cusdk__UserGetDeviceByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGetDeviceByGroup(soap, &soap_tmp_cusdk__UserGetDeviceByGroup, "cusdk:UserGetDeviceByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGetDeviceByGroup(soap_tmp_cusdk__UserGetDeviceByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGetDeviceByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGetDeviceByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserAddDevice(cusdkService *soap)
{	struct cusdk__UserAddDevice soap_tmp_cusdk__UserAddDevice;
	cusdk__UserAddDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserAddDevice(soap, &soap_tmp_cusdk__UserAddDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserAddDevice(soap, &soap_tmp_cusdk__UserAddDevice, "cusdk:UserAddDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserAddDevice(soap_tmp_cusdk__UserAddDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserAddDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserAddDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserDelDevice(cusdkService *soap)
{	struct cusdk__UserDelDevice soap_tmp_cusdk__UserDelDevice;
	cusdk__UserDelDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserDelDevice(soap, &soap_tmp_cusdk__UserDelDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserDelDevice(soap, &soap_tmp_cusdk__UserDelDevice, "cusdk:UserDelDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserDelDevice(soap_tmp_cusdk__UserDelDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserDelDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserDelDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserModifyDevice(cusdkService *soap)
{	struct cusdk__UserModifyDevice soap_tmp_cusdk__UserModifyDevice;
	cusdk__UserModifyDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserModifyDevice(soap, &soap_tmp_cusdk__UserModifyDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserModifyDevice(soap, &soap_tmp_cusdk__UserModifyDevice, "cusdk:UserModifyDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserModifyDevice(soap_tmp_cusdk__UserModifyDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserModifyDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserModifyDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetAuthorizationDevice(cusdkService *soap)
{	struct cusdk__GetAuthorizationDevice soap_tmp_cusdk__GetAuthorizationDevice;
	cusdk__GetAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetAuthorizationDevice(soap, &soap_tmp_cusdk__GetAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetAuthorizationDevice(soap, &soap_tmp_cusdk__GetAuthorizationDevice, "cusdk:GetAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAuthorizationDevice(soap_tmp_cusdk__GetAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__AddAuthorizationDevice(cusdkService *soap)
{	struct cusdk__AddAuthorizationDevice soap_tmp_cusdk__AddAuthorizationDevice;
	cusdk__AddAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__AddAuthorizationDevice(soap, &soap_tmp_cusdk__AddAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__AddAuthorizationDevice(soap, &soap_tmp_cusdk__AddAuthorizationDevice, "cusdk:AddAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AddAuthorizationDevice(soap_tmp_cusdk__AddAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:AddAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:AddAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelAuthorizationDevice(cusdkService *soap)
{	struct cusdk__DelAuthorizationDevice soap_tmp_cusdk__DelAuthorizationDevice;
	cusdk__DelAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelAuthorizationDevice(soap, &soap_tmp_cusdk__DelAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelAuthorizationDevice(soap, &soap_tmp_cusdk__DelAuthorizationDevice, "cusdk:DelAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelAuthorizationDevice(soap_tmp_cusdk__DelAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyAuthorizationDevice(cusdkService *soap)
{	struct cusdk__ModifyAuthorizationDevice soap_tmp_cusdk__ModifyAuthorizationDevice;
	cusdk__ModifyAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyAuthorizationDevice(soap, &soap_tmp_cusdk__ModifyAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyAuthorizationDevice(soap, &soap_tmp_cusdk__ModifyAuthorizationDevice, "cusdk:ModifyAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyAuthorizationDevice(soap_tmp_cusdk__ModifyAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceBaseInfo(cusdkService *soap)
{	struct cusdk__GetDeviceBaseInfo soap_tmp_cusdk__GetDeviceBaseInfo;
	cusdk__GetDeviceBaseInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceBaseInfo(soap, &soap_tmp_cusdk__GetDeviceBaseInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceBaseInfo(soap, &soap_tmp_cusdk__GetDeviceBaseInfo, "cusdk:GetDeviceBaseInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceBaseInfo(soap_tmp_cusdk__GetDeviceBaseInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceBaseInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceBaseInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
