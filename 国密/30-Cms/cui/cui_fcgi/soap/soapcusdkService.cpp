/* soapcusdkService.cpp
   Generated by gSOAP 2.8.0 from cusdk.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapcusdkService.h"

cusdkService::cusdkService()
{	cusdkService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

cusdkService::cusdkService(const struct soap &_soap) :soap(_soap)
{ }

cusdkService::cusdkService(soap_mode iomode)
{	cusdkService_init(iomode, iomode);
}

cusdkService::cusdkService(soap_mode imode, soap_mode omode)
{	cusdkService_init(imode, omode);
}

cusdkService::~cusdkService()
{ }

void cusdkService::cusdkService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"cusdk", "urn:cusdk", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
};

void cusdkService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

cusdkService *cusdkService::copy()
{	cusdkService *dup = SOAP_NEW_COPY(cusdkService(*(struct soap*)this));
	return dup;
}

int cusdkService::soap_close_socket()
{	return soap_closesock(this);
}

int cusdkService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int cusdkService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int cusdkService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int cusdkService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void cusdkService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void cusdkService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *cusdkService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void cusdkService::soap_noheader()
{	header = NULL;
}

int cusdkService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()))
				return this->error;
			(void)serve();
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET cusdkService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET cusdkService::accept()
{	return soap_accept(this);
}

int cusdkService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{	soap_begin(this);
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			this->error = SOAP_EOF;
			return soap_send_fault(this);
		}
#endif

		soap_begin(this);

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_recv(this))
		{	if (this->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(this);
#else 
				return soap_send_fault(this);
#endif
			}
			soap_closesock(this);

			continue;
		}

		if (soap_envelope_begin_in(this)
		 || soap_recv_header(this)
		 || soap_body_begin_in(this)
		 || dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve_cusdk__DetectServer(cusdkService*);
static int serve_cusdk__Login(cusdkService*);
static int serve_cusdk__Logout(cusdkService*);
static int serve_cusdk__SubscribeNotify(cusdkService*);
static int serve_cusdk__UnsubscribeNotify(cusdkService*);
static int serve_cusdk__GetNotify(cusdkService*);
static int serve_cusdk__GetCUIList(cusdkService*);
static int serve_cusdk__GetDomainList(cusdkService*);
static int serve_cusdk__SetupStream(cusdkService*);
static int serve_cusdk__PlayStream(cusdkService*);
static int serve_cusdk__StopStream(cusdkService*);
static int serve_cusdk__SendKeyFrame(cusdkService*);
static int serve_cusdk__PtzCtrl(cusdkService*);
static int serve_cusdk__PtzLock(cusdkService*);
static int serve_cusdk__PtzUnlock(cusdkService*);
static int serve_cusdk__PtzUnlockAll(cusdkService*);
static int serve_cusdk__SendTransData(cusdkService*);
static int serve_cusdk__GetUserInfo(cusdkService*);
static int serve_cusdk__GetUserGroupInfo(cusdkService*);
static int serve_cusdk__GetUserData(cusdkService*);
static int serve_cusdk__SetUserData(cusdkService*);
static int serve_cusdk__DelUserData(cusdkService*);
static int serve_cusdk__StartExportDeviceData(cusdkService*);
static int serve_cusdk__StopExportDeviceData(cusdkService*);
static int serve_cusdk__GetUserDevGroupByGroup(cusdkService*);
static int serve_cusdk__GetUserDevByGroup(cusdkService*);
static int serve_cusdk__GetUserDevGroup(cusdkService*);
static int serve_cusdk__GetDomainDevGroup(cusdkService*);
static int serve_cusdk__GetUserDev(cusdkService*);
static int serve_cusdk__GetUserDevByDomain(cusdkService*);
static int serve_cusdk__GetDeviceGroupDeviceRelations(cusdkService*);
static int serve_cusdk__CreateDeviceGroup(cusdkService*);
static int serve_cusdk__DelDeviceGroup(cusdkService*);
static int serve_cusdk__ModifyDeviceGroup(cusdkService*);
static int serve_cusdk__DeviceGroupAddDevice(cusdkService*);
static int serve_cusdk__DeviceGroupAddGroup(cusdkService*);
static int serve_cusdk__DeviceGroupDelDevice(cusdkService*);
static int serve_cusdk__GetUserList(cusdkService*);
static int serve_cusdk__GetUserGroupList(cusdkService*);
static int serve_cusdk__CreateUserGroup(cusdkService*);
static int serve_cusdk__DelUserGroup(cusdkService*);
static int serve_cusdk__ModifyUserGroup(cusdkService*);
static int serve_cusdk__CreateUser(cusdkService*);
static int serve_cusdk__DelUser(cusdkService*);
static int serve_cusdk__ModifyUser(cusdkService*);
static int serve_cusdk__ChangePassword(cusdkService*);
static int serve_cusdk__UserGetDeviceByGroup(cusdkService*);
static int serve_cusdk__UserAddDevice(cusdkService*);
static int serve_cusdk__UserDelDevice(cusdkService*);
static int serve_cusdk__UserGetTVWall(cusdkService*);
static int serve_cusdk__UserAddTVWall(cusdkService*);
static int serve_cusdk__UserDelTVWall(cusdkService*);
static int serve_cusdk__UserModifyDevice(cusdkService*);
static int serve_cusdk__GetAuthorizationDevice(cusdkService*);
static int serve_cusdk__AddAuthorizationDevice(cusdkService*);
static int serve_cusdk__DelAuthorizationDevice(cusdkService*);
static int serve_cusdk__ModifyAuthorizationDevice(cusdkService*);
static int serve_cusdk__GetDeviceBaseInfo(cusdkService*);
static int serve_cusdk__GetRCSSysParam(cusdkService*);
static int serve_cusdk__SetRCSSysParam(cusdkService*);
static int serve_cusdk__GetNruList(cusdkService*);
static int serve_cusdk__GetDiskList(cusdkService*);
static int serve_cusdk__GetPuChnBinding(cusdkService*);
static int serve_cusdk__BindPu(cusdkService*);
static int serve_cusdk__UnbindPu(cusdkService*);
static int serve_cusdk__QueryRecordDays(cusdkService*);
static int serve_cusdk__QueryRecord(cusdkService*);
static int serve_cusdk__StartPlatformRecord(cusdkService*);
static int serve_cusdk__StopPlatformRecord(cusdkService*);
static int serve_cusdk__StartPuRecord(cusdkService*);
static int serve_cusdk__StopPuRecord(cusdkService*);
static int serve_cusdk__SetupPlayRecord(cusdkService*);
static int serve_cusdk__PlayRecord(cusdkService*);
static int serve_cusdk__VcrCtrl(cusdkService*);
static int serve_cusdk__GetCurRecordPlayPosition(cusdkService*);
static int serve_cusdk__StopPlayRecord(cusdkService*);
static int serve_cusdk__SetupDownloadRecord(cusdkService*);
static int serve_cusdk__StartDownloadRecord(cusdkService*);
static int serve_cusdk__StopDownloadRecord(cusdkService*);
static int serve_cusdk__GetRecordPlan(cusdkService*);
static int serve_cusdk__SetRecordPlan(cusdkService*);
static int serve_cusdk__GetAllTVWall(cusdkService*);
static int serve_cusdk__GetTVWall(cusdkService*);
static int serve_cusdk__CreateTVWall(cusdkService*);
static int serve_cusdk__DelTVWall(cusdkService*);
static int serve_cusdk__ModifyTVWall(cusdkService*);
static int serve_cusdk__TVWallStartPlay(cusdkService*);
static int serve_cusdk__TVWallStopPlay(cusdkService*);
static int serve_cusdk__TVWallWindowPollContrl(cusdkService*);
static int serve_cusdk__TVWallSaveScheme(cusdkService*);
static int serve_cusdk__TVWallDelScheme(cusdkService*);
static int serve_cusdk__TVWallLoadScheme(cusdkService*);
static int serve_cusdk__TVWallQueryScheme(cusdkService*);
static int serve_cusdk__TVWallSetSchemePoll(cusdkService*);
static int serve_cusdk__TVWallGetSchemePoll(cusdkService*);
static int serve_cusdk__TVWallSchemePollControl(cusdkService*);
static int serve_cusdk__SetTVDivNum(cusdkService*);
static int serve_cusdk__PlayRecordOnTVWall(cusdkService*);
static int serve_cusdk__StopPlayRecordOnTVWall(cusdkService*);
static int serve_cusdk__GetSupportMapTypes(cusdkService*);
static int serve_cusdk__GetMapImageUploadUrl(cusdkService*);
static int serve_cusdk__CreateMap(cusdkService*);
static int serve_cusdk__ModifyMap(cusdkService*);
static int serve_cusdk__DelMap(cusdkService*);
static int serve_cusdk__QueryMap(cusdkService*);
static int serve_cusdk__QueryMapArea(cusdkService*);
static int serve_cusdk__CreateMapArea(cusdkService*);
static int serve_cusdk__ModifyMapArea(cusdkService*);
static int serve_cusdk__CreateMapElement(cusdkService*);
static int serve_cusdk__ModifyMapElement(cusdkService*);
static int serve_cusdk__DelMapElement(cusdkService*);
static int serve_cusdk__QueryMapElement(cusdkService*);
static int serve_cusdk__SearchMapElement(cusdkService*);
static int serve_cusdk__GetMapElementImageUploadUrl(cusdkService*);
static int serve_cusdk__QueryMapElementImageList(cusdkService*);
static int serve_cusdk__MapPositionMar2Earth(cusdkService*);
static int serve_cusdk__MapPositionEarth2Mar(cusdkService*);
static int serve_cusdk__GetEMapDataVersion(cusdkService*);
static int serve_cusdk__GetAlarmLinkDataVersion(cusdkService*);
static int serve_cusdk__QueryAlarmLinkConfig(cusdkService*);
static int serve_cusdk__GetAlarmLinkConfig(cusdkService*);
static int serve_cusdk__SetAlarmLinkConfig(cusdkService*);
static int serve_cusdk__QueryAlarmLinkArea(cusdkService*);
static int serve_cusdk__CreateAlarmLinkArea(cusdkService*);
static int serve_cusdk__DelAlarmLinkArea(cusdkService*);
static int serve_cusdk__ModifyAlarmLinkArea(cusdkService*);
static int serve_cusdk__QueryUserLog(cusdkService*);
static int serve_cusdk__StartExportUserLog(cusdkService*);
static int serve_cusdk__GetExportUserLogProcess(cusdkService*);
static int serve_cusdk__StopExportUserLog(cusdkService*);
static int serve_cusdk__QueryDeviceLog(cusdkService*);
static int serve_cusdk__StartExportDeviceLog(cusdkService*);
static int serve_cusdk__GetExportDeviceLogProcess(cusdkService*);
static int serve_cusdk__StopExportDeviceLog(cusdkService*);
static int serve_cusdk__QueryAlarmLog(cusdkService*);
static int serve_cusdk__StartExportAlarmLog(cusdkService*);
static int serve_cusdk__GetExportAlarmLogProcess(cusdkService*);
static int serve_cusdk__StopExportAlarmLog(cusdkService*);
static int serve_cusdk__GetLogConfig(cusdkService*);
static int serve_cusdk__SetLogConfig(cusdkService*);
static int serve_cusdk__CallPu(cusdkService*);
static int serve_cusdk__HangUpPu(cusdkService*);
static int serve_cusdk__GetDeviceEncoderParam(cusdkService*);
static int serve_cusdk__GetDeviceAudioEncoderParam(cusdkService*);
static int serve_cusdk__SetDeviceEncoderParam(cusdkService*);
static int serve_cusdk__SetPuVidSrcOSD(cusdkService*);
static int serve_cusdk__GetPuVidSrcOSD(cusdkService*);
static int serve_cusdk__SetDeviceName(cusdkService*);
static int serve_cusdk__GetCameraProtocolType(cusdkService*);
static int serve_cusdk__SetCameraProtocolType(cusdkService*);
static int serve_cusdk__GetMotionDetectConfig(cusdkService*);
static int serve_cusdk__SetMotionDetectConfig(cusdkService*);
static int serve_cusdk__GetShadeConfig(cusdkService*);
static int serve_cusdk__SetShadeConfig(cusdkService*);
static int serve_cusdk__GetDeviceChannelName(cusdkService*);
static int serve_cusdk__SetDeviceChannelName(cusdkService*);
static int serve_cusdk__GetSyncVideoSrcNameEnable(cusdkService*);
static int serve_cusdk__SetSyncVideoSrcNameEnable(cusdkService*);
static int serve_cusdk__GetPtzPresetName(cusdkService*);
static int serve_cusdk__SetPtzPresetName(cusdkService*);
static int serve_cusdk__DelPtzPresetName(cusdkService*);
static int serve_cusdk__VsipChannelData(cusdkService*);
static int serve_cusdk__SetTransDataParam(cusdkService*);
static int serve_cusdk__GetTransDataParam(cusdkService*);
static int serve_cusdk__QueryGPSTrace(cusdkService*);
static int serve_cusdk__GetMapConfig(cusdkService*);
static int serve_cusdk__SetMapConfig(cusdkService*);
static int serve_cusdk__GetDeviceSerialConfig(cusdkService*);
static int serve_cusdk__SetDeviceSerialConfig(cusdkService*);
static int serve_cusdk__GetDeviceGBID(cusdkService*);
static int serve_cusdk__GetCivilcode(cusdkService*);
static int serve_cusdk__GetDeviceChnByGBID(cusdkService*);
static int serve_cusdk__GetCAPSConfig(cusdkService*);
static int serve_cusdk__SetCAPSConfig(cusdkService*);
static int serve_cusdk__QueryCAPSDeviceList(cusdkService*);
static int serve_cusdk__CAPSAddDevice(cusdkService*);
static int serve_cusdk__CAPSModifyDevice(cusdkService*);
static int serve_cusdk__CAPSDelDevice(cusdkService*);
static int serve_cusdk__GetOfflineDeviceStat(cusdkService*);
static int serve_cusdk__UpdateCUProperty(cusdkService*);
static int serve_cusdk__RestartDevice(cusdkService*);
static int serve_cusdk__UserAddDeviceGroup(cusdkService*);
static int serve_cusdk__UserDelDeviceGroup(cusdkService*);
static int serve_cusdk__UserGroupAddDeviceGroup(cusdkService*);
static int serve_cusdk__UserGroupDelDeviceGroup(cusdkService*);
static int serve_cusdk__UserSetAutoSyncDeviceGroup(cusdkService*);
static int serve_cusdk__UserGroupSetAutoSyncDeviceGroup(cusdkService*);
static int serve_cusdk__QueryOperationProgress(cusdkService*);
static int serve_cusdk__UserQueryAutoSyncDeviceGroup(cusdkService*);
static int serve_cusdk__UserGroupQueryAutoSyncDeviceGroup(cusdkService*);
static int serve_cusdk__GetSuperGBDomainList(cusdkService*);
static int serve_cusdk__PushDevice(cusdkService*);
static int serve_cusdk__GetDataVersion(cusdkService*);
static int serve_cusdk__StartDataFileExport(cusdkService*);
static int serve_cusdk__EndDataFileExport(cusdkService*);
static int serve_cusdk__StartDataFileImport(cusdkService*);
static int serve_cusdk__EndDataFileImport(cusdkService*);
static int serve_cusdk__GetOperationProgress(cusdkService*);
static int serve_cusdk__GetChildrenGBDomainList(cusdkService*);
static int serve_cusdk__GetGBDevciePushDomain(cusdkService*);
static int serve_cusdk__UpdateOperationProgress(cusdkService*);
static int serve_cusdk__GetResInfo(cusdkService*);
static int serve_cusdk__SearchDevice(cusdkService*);
static int serve_cusdk__GetSearchResult(cusdkService*);
static int serve_cusdk__GetSearchResultByGroup(cusdkService*);
static int serve_cusdk__EndOperation(cusdkService*);
static int serve_cusdk__GetDeviceGroup(cusdkService*);
static int serve_cusdk__GetDevice(cusdkService*);
static int serve_cusdk__GetDeviceGroupPath(cusdkService*);
static int serve_cusdk__CreateCustomTreeView(cusdkService*);
static int serve_cusdk__ModifyCustomTreeViewName(cusdkService*);
static int serve_cusdk__DeleteCustomTreeView(cusdkService*);
static int serve_cusdk__GetCustomTreeViewList(cusdkService*);
static int serve_cusdk__GetUserDeviceInGroup(cusdkService*);
static int serve_cusdk__BatchOperation(cusdkService*);
static int serve_cusdk__GetDeviceGroupVideoSrcNum(cusdkService*);
static int serve_cusdk__GetVSOfflineInfo(cusdkService*);
static int serve_cusdk__GetDevAzimuthalAngle(cusdkService*);
static int serve_cusdk__DeleteRecord(cusdkService*);
static int serve_cusdk__AutoMatchGBId(cusdkService*);
static int serve_cusdk__GetGroupDevSumNum(cusdkService*);
static int serve_cusdk__ModifyGBDeviceGroup(cusdkService*);
static int serve_cusdk__ModifyGBDevice(cusdkService*);
static int serve_cusdk__StartDevicePush(cusdkService*);
static int serve_cusdk__GetGBDeviceByGroup(cusdkService*);
static int serve_cusdk__SearchGBDevice(cusdkService*);
static int serve_cusdk__SearchGBDeviceGroup(cusdkService*);
static int serve_cusdk__GetNextDeviceGBIDError(cusdkService*);
static int serve_cusdk__GetServerConfig(cusdkService*);
static int serve_cusdk__SetServerConfig(cusdkService*);
static int serve_cusdk__TVWallClearAlarm(cusdkService*);
static int serve_cusdk__LockRecord(cusdkService*);
static int serve_cusdk__UnlockRecord(cusdkService*);
static int serve_cusdk__GetPULongOSD(cusdkService*);
static int serve_cusdk__SetPULongOSD(cusdkService*);
static int serve_cusdk__GetDeviceCertificate(cusdkService*);
static int serve_cusdk__DeviceSignatrueCtrl(cusdkService*);
static int serve_cusdk__DeviceEncryptionCtrl(cusdkService*);
static int serve_cusdk__BidirectionalAuth1(cusdkService*);
static int serve_cusdk__BidirectionalAuth2(cusdkService*);
static int serve_cusdk__AdjustVideoSrcOrder(cusdkService*);
static int serve_cusdk__GetAlarmTypes(cusdkService*);
static int serve_cusdk__EliminateAlarm(cusdkService*);
static int serve_cusdk__GetDeviceRecordsServerUrl(cusdkService*);
static int serve_cusdk__LockRecordBatch(cusdkService*);
static int serve_cusdk__UnlockRecordBatch(cusdkService*);
static int serve_cusdk__QueryLockedRecord(cusdkService*);
static int serve_cusdk__GetStreamPreDispatchConfig(cusdkService*);
static int serve_cusdk__SetStreamPreDispatchConfig(cusdkService*);
static int serve_cusdk__QueryStreamPreDispatchDevice(cusdkService*);
static int serve_cusdk__StreamPreDispatchAddDevice(cusdkService*);
static int serve_cusdk__StreamPreDispatchDelDevice(cusdkService*);
static int serve_cusdk__GetEncChnRes(cusdkService*);
static int serve_cusdk__AllocEncChnRes(cusdkService*);
static int serve_cusdk__ReleaseEncChnRes(cusdkService*);
static int serve_cusdk__GBPuTransdataSsSet(cusdkService*);
static int serve_cusdk__GetGBDomainPrivilege(cusdkService*);
static int serve_cusdk__SetGBDomainPrivilege(cusdkService*);
static int serve_cusdk__GetGBConfig(cusdkService*);
static int serve_cusdk__SetGBConfig(cusdkService*);
static int serve_cusdk__SetCertificate(cusdkService*);
static int serve_cusdk__GetCertificate(cusdkService*);

int cusdkService::dispatch()
{	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DetectServer"))
		return serve_cusdk__DetectServer(this);
	if (!soap_match_tag(this, this->tag, "cusdk:Login"))
		return serve_cusdk__Login(this);
	if (!soap_match_tag(this, this->tag, "cusdk:Logout"))
		return serve_cusdk__Logout(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SubscribeNotify"))
		return serve_cusdk__SubscribeNotify(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UnsubscribeNotify"))
		return serve_cusdk__UnsubscribeNotify(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetNotify"))
		return serve_cusdk__GetNotify(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCUIList"))
		return serve_cusdk__GetCUIList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDomainList"))
		return serve_cusdk__GetDomainList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetupStream"))
		return serve_cusdk__SetupStream(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PlayStream"))
		return serve_cusdk__PlayStream(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopStream"))
		return serve_cusdk__StopStream(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SendKeyFrame"))
		return serve_cusdk__SendKeyFrame(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzCtrl"))
		return serve_cusdk__PtzCtrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzLock"))
		return serve_cusdk__PtzLock(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzUnlock"))
		return serve_cusdk__PtzUnlock(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PtzUnlockAll"))
		return serve_cusdk__PtzUnlockAll(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SendTransData"))
		return serve_cusdk__SendTransData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserInfo"))
		return serve_cusdk__GetUserInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserGroupInfo"))
		return serve_cusdk__GetUserGroupInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserData"))
		return serve_cusdk__GetUserData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetUserData"))
		return serve_cusdk__SetUserData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelUserData"))
		return serve_cusdk__DelUserData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartExportDeviceData"))
		return serve_cusdk__StartExportDeviceData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopExportDeviceData"))
		return serve_cusdk__StopExportDeviceData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevGroupByGroup"))
		return serve_cusdk__GetUserDevGroupByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevByGroup"))
		return serve_cusdk__GetUserDevByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevGroup"))
		return serve_cusdk__GetUserDevGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDomainDevGroup"))
		return serve_cusdk__GetDomainDevGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDev"))
		return serve_cusdk__GetUserDev(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDevByDomain"))
		return serve_cusdk__GetUserDevByDomain(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceGroupDeviceRelations"))
		return serve_cusdk__GetDeviceGroupDeviceRelations(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateDeviceGroup"))
		return serve_cusdk__CreateDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelDeviceGroup"))
		return serve_cusdk__DelDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyDeviceGroup"))
		return serve_cusdk__ModifyDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceGroupAddDevice"))
		return serve_cusdk__DeviceGroupAddDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceGroupAddGroup"))
		return serve_cusdk__DeviceGroupAddGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceGroupDelDevice"))
		return serve_cusdk__DeviceGroupDelDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserList"))
		return serve_cusdk__GetUserList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserGroupList"))
		return serve_cusdk__GetUserGroupList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateUserGroup"))
		return serve_cusdk__CreateUserGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelUserGroup"))
		return serve_cusdk__DelUserGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyUserGroup"))
		return serve_cusdk__ModifyUserGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateUser"))
		return serve_cusdk__CreateUser(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelUser"))
		return serve_cusdk__DelUser(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyUser"))
		return serve_cusdk__ModifyUser(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ChangePassword"))
		return serve_cusdk__ChangePassword(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGetDeviceByGroup"))
		return serve_cusdk__UserGetDeviceByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserAddDevice"))
		return serve_cusdk__UserAddDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserDelDevice"))
		return serve_cusdk__UserDelDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGetTVWall"))
		return serve_cusdk__UserGetTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserAddTVWall"))
		return serve_cusdk__UserAddTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserDelTVWall"))
		return serve_cusdk__UserDelTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserModifyDevice"))
		return serve_cusdk__UserModifyDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetAuthorizationDevice"))
		return serve_cusdk__GetAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:AddAuthorizationDevice"))
		return serve_cusdk__AddAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelAuthorizationDevice"))
		return serve_cusdk__DelAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyAuthorizationDevice"))
		return serve_cusdk__ModifyAuthorizationDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceBaseInfo"))
		return serve_cusdk__GetDeviceBaseInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetRCSSysParam"))
		return serve_cusdk__GetRCSSysParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetRCSSysParam"))
		return serve_cusdk__SetRCSSysParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetNruList"))
		return serve_cusdk__GetNruList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDiskList"))
		return serve_cusdk__GetDiskList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetPuChnBinding"))
		return serve_cusdk__GetPuChnBinding(this);
	if (!soap_match_tag(this, this->tag, "cusdk:BindPu"))
		return serve_cusdk__BindPu(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UnbindPu"))
		return serve_cusdk__UnbindPu(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryRecordDays"))
		return serve_cusdk__QueryRecordDays(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryRecord"))
		return serve_cusdk__QueryRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartPlatformRecord"))
		return serve_cusdk__StartPlatformRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopPlatformRecord"))
		return serve_cusdk__StopPlatformRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartPuRecord"))
		return serve_cusdk__StartPuRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopPuRecord"))
		return serve_cusdk__StopPuRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetupPlayRecord"))
		return serve_cusdk__SetupPlayRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PlayRecord"))
		return serve_cusdk__PlayRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:VcrCtrl"))
		return serve_cusdk__VcrCtrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCurRecordPlayPosition"))
		return serve_cusdk__GetCurRecordPlayPosition(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopPlayRecord"))
		return serve_cusdk__StopPlayRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetupDownloadRecord"))
		return serve_cusdk__SetupDownloadRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartDownloadRecord"))
		return serve_cusdk__StartDownloadRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopDownloadRecord"))
		return serve_cusdk__StopDownloadRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetRecordPlan"))
		return serve_cusdk__GetRecordPlan(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetRecordPlan"))
		return serve_cusdk__SetRecordPlan(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetAllTVWall"))
		return serve_cusdk__GetAllTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetTVWall"))
		return serve_cusdk__GetTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateTVWall"))
		return serve_cusdk__CreateTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelTVWall"))
		return serve_cusdk__DelTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyTVWall"))
		return serve_cusdk__ModifyTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallStartPlay"))
		return serve_cusdk__TVWallStartPlay(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallStopPlay"))
		return serve_cusdk__TVWallStopPlay(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallWindowPollContrl"))
		return serve_cusdk__TVWallWindowPollContrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallSaveScheme"))
		return serve_cusdk__TVWallSaveScheme(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallDelScheme"))
		return serve_cusdk__TVWallDelScheme(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallLoadScheme"))
		return serve_cusdk__TVWallLoadScheme(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallQueryScheme"))
		return serve_cusdk__TVWallQueryScheme(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallSetSchemePoll"))
		return serve_cusdk__TVWallSetSchemePoll(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallGetSchemePoll"))
		return serve_cusdk__TVWallGetSchemePoll(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallSchemePollControl"))
		return serve_cusdk__TVWallSchemePollControl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetTVDivNum"))
		return serve_cusdk__SetTVDivNum(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PlayRecordOnTVWall"))
		return serve_cusdk__PlayRecordOnTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopPlayRecordOnTVWall"))
		return serve_cusdk__StopPlayRecordOnTVWall(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetSupportMapTypes"))
		return serve_cusdk__GetSupportMapTypes(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetMapImageUploadUrl"))
		return serve_cusdk__GetMapImageUploadUrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateMap"))
		return serve_cusdk__CreateMap(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyMap"))
		return serve_cusdk__ModifyMap(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelMap"))
		return serve_cusdk__DelMap(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryMap"))
		return serve_cusdk__QueryMap(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryMapArea"))
		return serve_cusdk__QueryMapArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateMapArea"))
		return serve_cusdk__CreateMapArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyMapArea"))
		return serve_cusdk__ModifyMapArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateMapElement"))
		return serve_cusdk__CreateMapElement(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyMapElement"))
		return serve_cusdk__ModifyMapElement(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelMapElement"))
		return serve_cusdk__DelMapElement(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryMapElement"))
		return serve_cusdk__QueryMapElement(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SearchMapElement"))
		return serve_cusdk__SearchMapElement(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetMapElementImageUploadUrl"))
		return serve_cusdk__GetMapElementImageUploadUrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryMapElementImageList"))
		return serve_cusdk__QueryMapElementImageList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:MapPositionMar2Earth"))
		return serve_cusdk__MapPositionMar2Earth(this);
	if (!soap_match_tag(this, this->tag, "cusdk:MapPositionEarth2Mar"))
		return serve_cusdk__MapPositionEarth2Mar(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetEMapDataVersion"))
		return serve_cusdk__GetEMapDataVersion(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetAlarmLinkDataVersion"))
		return serve_cusdk__GetAlarmLinkDataVersion(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryAlarmLinkConfig"))
		return serve_cusdk__QueryAlarmLinkConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetAlarmLinkConfig"))
		return serve_cusdk__GetAlarmLinkConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetAlarmLinkConfig"))
		return serve_cusdk__SetAlarmLinkConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryAlarmLinkArea"))
		return serve_cusdk__QueryAlarmLinkArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateAlarmLinkArea"))
		return serve_cusdk__CreateAlarmLinkArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelAlarmLinkArea"))
		return serve_cusdk__DelAlarmLinkArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyAlarmLinkArea"))
		return serve_cusdk__ModifyAlarmLinkArea(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryUserLog"))
		return serve_cusdk__QueryUserLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartExportUserLog"))
		return serve_cusdk__StartExportUserLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetExportUserLogProcess"))
		return serve_cusdk__GetExportUserLogProcess(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopExportUserLog"))
		return serve_cusdk__StopExportUserLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryDeviceLog"))
		return serve_cusdk__QueryDeviceLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartExportDeviceLog"))
		return serve_cusdk__StartExportDeviceLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetExportDeviceLogProcess"))
		return serve_cusdk__GetExportDeviceLogProcess(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopExportDeviceLog"))
		return serve_cusdk__StopExportDeviceLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryAlarmLog"))
		return serve_cusdk__QueryAlarmLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartExportAlarmLog"))
		return serve_cusdk__StartExportAlarmLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetExportAlarmLogProcess"))
		return serve_cusdk__GetExportAlarmLogProcess(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StopExportAlarmLog"))
		return serve_cusdk__StopExportAlarmLog(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetLogConfig"))
		return serve_cusdk__GetLogConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetLogConfig"))
		return serve_cusdk__SetLogConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CallPu"))
		return serve_cusdk__CallPu(this);
	if (!soap_match_tag(this, this->tag, "cusdk:HangUpPu"))
		return serve_cusdk__HangUpPu(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceEncoderParam"))
		return serve_cusdk__GetDeviceEncoderParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceAudioEncoderParam"))
		return serve_cusdk__GetDeviceAudioEncoderParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetDeviceEncoderParam"))
		return serve_cusdk__SetDeviceEncoderParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetPuVidSrcOSD"))
		return serve_cusdk__SetPuVidSrcOSD(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetPuVidSrcOSD"))
		return serve_cusdk__GetPuVidSrcOSD(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetDeviceName"))
		return serve_cusdk__SetDeviceName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCameraProtocolType"))
		return serve_cusdk__GetCameraProtocolType(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetCameraProtocolType"))
		return serve_cusdk__SetCameraProtocolType(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetMotionDetectConfig"))
		return serve_cusdk__GetMotionDetectConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetMotionDetectConfig"))
		return serve_cusdk__SetMotionDetectConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetShadeConfig"))
		return serve_cusdk__GetShadeConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetShadeConfig"))
		return serve_cusdk__SetShadeConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceChannelName"))
		return serve_cusdk__GetDeviceChannelName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetDeviceChannelName"))
		return serve_cusdk__SetDeviceChannelName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetSyncVideoSrcNameEnable"))
		return serve_cusdk__GetSyncVideoSrcNameEnable(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetSyncVideoSrcNameEnable"))
		return serve_cusdk__SetSyncVideoSrcNameEnable(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetPtzPresetName"))
		return serve_cusdk__GetPtzPresetName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetPtzPresetName"))
		return serve_cusdk__SetPtzPresetName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DelPtzPresetName"))
		return serve_cusdk__DelPtzPresetName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:VsipChannelData"))
		return serve_cusdk__VsipChannelData(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetTransDataParam"))
		return serve_cusdk__SetTransDataParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetTransDataParam"))
		return serve_cusdk__GetTransDataParam(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryGPSTrace"))
		return serve_cusdk__QueryGPSTrace(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetMapConfig"))
		return serve_cusdk__GetMapConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetMapConfig"))
		return serve_cusdk__SetMapConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceSerialConfig"))
		return serve_cusdk__GetDeviceSerialConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetDeviceSerialConfig"))
		return serve_cusdk__SetDeviceSerialConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceGBID"))
		return serve_cusdk__GetDeviceGBID(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCivilcode"))
		return serve_cusdk__GetCivilcode(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceChnByGBID"))
		return serve_cusdk__GetDeviceChnByGBID(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCAPSConfig"))
		return serve_cusdk__GetCAPSConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetCAPSConfig"))
		return serve_cusdk__SetCAPSConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryCAPSDeviceList"))
		return serve_cusdk__QueryCAPSDeviceList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CAPSAddDevice"))
		return serve_cusdk__CAPSAddDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CAPSModifyDevice"))
		return serve_cusdk__CAPSModifyDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CAPSDelDevice"))
		return serve_cusdk__CAPSDelDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetOfflineDeviceStat"))
		return serve_cusdk__GetOfflineDeviceStat(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UpdateCUProperty"))
		return serve_cusdk__UpdateCUProperty(this);
	if (!soap_match_tag(this, this->tag, "cusdk:RestartDevice"))
		return serve_cusdk__RestartDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserAddDeviceGroup"))
		return serve_cusdk__UserAddDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserDelDeviceGroup"))
		return serve_cusdk__UserDelDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGroupAddDeviceGroup"))
		return serve_cusdk__UserGroupAddDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGroupDelDeviceGroup"))
		return serve_cusdk__UserGroupDelDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserSetAutoSyncDeviceGroup"))
		return serve_cusdk__UserSetAutoSyncDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGroupSetAutoSyncDeviceGroup"))
		return serve_cusdk__UserGroupSetAutoSyncDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryOperationProgress"))
		return serve_cusdk__QueryOperationProgress(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserQueryAutoSyncDeviceGroup"))
		return serve_cusdk__UserQueryAutoSyncDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UserGroupQueryAutoSyncDeviceGroup"))
		return serve_cusdk__UserGroupQueryAutoSyncDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetSuperGBDomainList"))
		return serve_cusdk__GetSuperGBDomainList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:PushDevice"))
		return serve_cusdk__PushDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDataVersion"))
		return serve_cusdk__GetDataVersion(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartDataFileExport"))
		return serve_cusdk__StartDataFileExport(this);
	if (!soap_match_tag(this, this->tag, "cusdk:EndDataFileExport"))
		return serve_cusdk__EndDataFileExport(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartDataFileImport"))
		return serve_cusdk__StartDataFileImport(this);
	if (!soap_match_tag(this, this->tag, "cusdk:EndDataFileImport"))
		return serve_cusdk__EndDataFileImport(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetOperationProgress"))
		return serve_cusdk__GetOperationProgress(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetChildrenGBDomainList"))
		return serve_cusdk__GetChildrenGBDomainList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetGBDevciePushDomain"))
		return serve_cusdk__GetGBDevciePushDomain(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UpdateOperationProgress"))
		return serve_cusdk__UpdateOperationProgress(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetResInfo"))
		return serve_cusdk__GetResInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SearchDevice"))
		return serve_cusdk__SearchDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetSearchResult"))
		return serve_cusdk__GetSearchResult(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetSearchResultByGroup"))
		return serve_cusdk__GetSearchResultByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:EndOperation"))
		return serve_cusdk__EndOperation(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceGroup"))
		return serve_cusdk__GetDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDevice"))
		return serve_cusdk__GetDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceGroupPath"))
		return serve_cusdk__GetDeviceGroupPath(this);
	if (!soap_match_tag(this, this->tag, "cusdk:CreateCustomTreeView"))
		return serve_cusdk__CreateCustomTreeView(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyCustomTreeViewName"))
		return serve_cusdk__ModifyCustomTreeViewName(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeleteCustomTreeView"))
		return serve_cusdk__DeleteCustomTreeView(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCustomTreeViewList"))
		return serve_cusdk__GetCustomTreeViewList(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetUserDeviceInGroup"))
		return serve_cusdk__GetUserDeviceInGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:BatchOperation"))
		return serve_cusdk__BatchOperation(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceGroupVideoSrcNum"))
		return serve_cusdk__GetDeviceGroupVideoSrcNum(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetVSOfflineInfo"))
		return serve_cusdk__GetVSOfflineInfo(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDevAzimuthalAngle"))
		return serve_cusdk__GetDevAzimuthalAngle(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeleteRecord"))
		return serve_cusdk__DeleteRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:AutoMatchGBId"))
		return serve_cusdk__AutoMatchGBId(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetGroupDevSumNum"))
		return serve_cusdk__GetGroupDevSumNum(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyGBDeviceGroup"))
		return serve_cusdk__ModifyGBDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ModifyGBDevice"))
		return serve_cusdk__ModifyGBDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StartDevicePush"))
		return serve_cusdk__StartDevicePush(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetGBDeviceByGroup"))
		return serve_cusdk__GetGBDeviceByGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SearchGBDevice"))
		return serve_cusdk__SearchGBDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SearchGBDeviceGroup"))
		return serve_cusdk__SearchGBDeviceGroup(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetNextDeviceGBIDError"))
		return serve_cusdk__GetNextDeviceGBIDError(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetServerConfig"))
		return serve_cusdk__GetServerConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetServerConfig"))
		return serve_cusdk__SetServerConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:TVWallClearAlarm"))
		return serve_cusdk__TVWallClearAlarm(this);
	if (!soap_match_tag(this, this->tag, "cusdk:LockRecord"))
		return serve_cusdk__LockRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UnlockRecord"))
		return serve_cusdk__UnlockRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetPULongOSD"))
		return serve_cusdk__GetPULongOSD(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetPULongOSD"))
		return serve_cusdk__SetPULongOSD(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceCertificate"))
		return serve_cusdk__GetDeviceCertificate(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceSignatrueCtrl"))
		return serve_cusdk__DeviceSignatrueCtrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:DeviceEncryptionCtrl"))
		return serve_cusdk__DeviceEncryptionCtrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:BidirectionalAuth1"))
		return serve_cusdk__BidirectionalAuth1(this);
	if (!soap_match_tag(this, this->tag, "cusdk:BidirectionalAuth2"))
		return serve_cusdk__BidirectionalAuth2(this);
	if (!soap_match_tag(this, this->tag, "cusdk:AdjustVideoSrcOrder"))
		return serve_cusdk__AdjustVideoSrcOrder(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetAlarmTypes"))
		return serve_cusdk__GetAlarmTypes(this);
	if (!soap_match_tag(this, this->tag, "cusdk:EliminateAlarm"))
		return serve_cusdk__EliminateAlarm(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetDeviceRecordsServerUrl"))
		return serve_cusdk__GetDeviceRecordsServerUrl(this);
	if (!soap_match_tag(this, this->tag, "cusdk:LockRecordBatch"))
		return serve_cusdk__LockRecordBatch(this);
	if (!soap_match_tag(this, this->tag, "cusdk:UnlockRecordBatch"))
		return serve_cusdk__UnlockRecordBatch(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryLockedRecord"))
		return serve_cusdk__QueryLockedRecord(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetStreamPreDispatchConfig"))
		return serve_cusdk__GetStreamPreDispatchConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetStreamPreDispatchConfig"))
		return serve_cusdk__SetStreamPreDispatchConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:QueryStreamPreDispatchDevice"))
		return serve_cusdk__QueryStreamPreDispatchDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StreamPreDispatchAddDevice"))
		return serve_cusdk__StreamPreDispatchAddDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:StreamPreDispatchDelDevice"))
		return serve_cusdk__StreamPreDispatchDelDevice(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetEncChnRes"))
		return serve_cusdk__GetEncChnRes(this);
	if (!soap_match_tag(this, this->tag, "cusdk:AllocEncChnRes"))
		return serve_cusdk__AllocEncChnRes(this);
	if (!soap_match_tag(this, this->tag, "cusdk:ReleaseEncChnRes"))
		return serve_cusdk__ReleaseEncChnRes(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GBPuTransdataSsSet"))
		return serve_cusdk__GBPuTransdataSsSet(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetGBDomainPrivilege"))
		return serve_cusdk__GetGBDomainPrivilege(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetGBDomainPrivilege"))
		return serve_cusdk__SetGBDomainPrivilege(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetGBConfig"))
		return serve_cusdk__GetGBConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetGBConfig"))
		return serve_cusdk__SetGBConfig(this);
	if (!soap_match_tag(this, this->tag, "cusdk:SetCertificate"))
		return serve_cusdk__SetCertificate(this);
	if (!soap_match_tag(this, this->tag, "cusdk:GetCertificate"))
		return serve_cusdk__GetCertificate(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve_cusdk__DetectServer(cusdkService *soap)
{	struct cusdk__DetectServer soap_tmp_cusdk__DetectServer;
	cusdk__DetectServerRsp detectRsp;
	detectRsp.soap_default(soap);
	soap_default_cusdk__DetectServer(soap, &soap_tmp_cusdk__DetectServer);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DetectServer(soap, &soap_tmp_cusdk__DetectServer, "cusdk:DetectServer", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DetectServer(soap_tmp_cusdk__DetectServer.detectReq, detectRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	detectRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || detectRsp.soap_put(soap, "cusdk:DetectServerRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || detectRsp.soap_put(soap, "cusdk:DetectServerRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__Login(cusdkService *soap)
{	struct cusdk__Login soap_tmp_cusdk__Login;
	cusdk__LoginRsp loginRsp;
	loginRsp.soap_default(soap);
	soap_default_cusdk__Login(soap, &soap_tmp_cusdk__Login);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__Login(soap, &soap_tmp_cusdk__Login, "cusdk:Login", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Login(soap_tmp_cusdk__Login.loginReq, loginRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	loginRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || loginRsp.soap_put(soap, "cusdk:LoginRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || loginRsp.soap_put(soap, "cusdk:LoginRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__Logout(cusdkService *soap)
{	struct cusdk__Logout soap_tmp_cusdk__Logout;
	cusdk__LogoutRsp logoutRsp;
	logoutRsp.soap_default(soap);
	soap_default_cusdk__Logout(soap, &soap_tmp_cusdk__Logout);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__Logout(soap, &soap_tmp_cusdk__Logout, "cusdk:Logout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Logout(soap_tmp_cusdk__Logout.logoutReq, logoutRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	logoutRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || logoutRsp.soap_put(soap, "cusdk:LogoutRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || logoutRsp.soap_put(soap, "cusdk:LogoutRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SubscribeNotify(cusdkService *soap)
{	struct cusdk__SubscribeNotify soap_tmp_cusdk__SubscribeNotify;
	cusdk__SubscribeNotifyRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SubscribeNotify(soap, &soap_tmp_cusdk__SubscribeNotify);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SubscribeNotify(soap, &soap_tmp_cusdk__SubscribeNotify, "cusdk:SubscribeNotify", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SubscribeNotify(soap_tmp_cusdk__SubscribeNotify.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SubscribeNotifyRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SubscribeNotifyRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UnsubscribeNotify(cusdkService *soap)
{	struct cusdk__UnsubscribeNotify soap_tmp_cusdk__UnsubscribeNotify;
	cusdk__UnsubscribeNotifyRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UnsubscribeNotify(soap, &soap_tmp_cusdk__UnsubscribeNotify);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UnsubscribeNotify(soap, &soap_tmp_cusdk__UnsubscribeNotify, "cusdk:UnsubscribeNotify", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UnsubscribeNotify(soap_tmp_cusdk__UnsubscribeNotify.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UnsubscribeNotifyRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UnsubscribeNotifyRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetNotify(cusdkService *soap)
{	struct cusdk__GetNotify soap_tmp_cusdk__GetNotify;
	cusdk__GetNotifyRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetNotify(soap, &soap_tmp_cusdk__GetNotify);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetNotify(soap, &soap_tmp_cusdk__GetNotify, "cusdk:GetNotify", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetNotify(soap_tmp_cusdk__GetNotify.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetNotifyRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetNotifyRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCUIList(cusdkService *soap)
{	struct cusdk__GetCUIList soap_tmp_cusdk__GetCUIList;
	cusdk__GetCUIListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCUIList(soap, &soap_tmp_cusdk__GetCUIList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCUIList(soap, &soap_tmp_cusdk__GetCUIList, "cusdk:GetCUIList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCUIList(soap_tmp_cusdk__GetCUIList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCUIListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCUIListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDomainList(cusdkService *soap)
{	struct cusdk__GetDomainList soap_tmp_cusdk__GetDomainList;
	cusdk__GetDomainListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDomainList(soap, &soap_tmp_cusdk__GetDomainList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDomainList(soap, &soap_tmp_cusdk__GetDomainList, "cusdk:GetDomainList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDomainList(soap_tmp_cusdk__GetDomainList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDomainListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDomainListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetupStream(cusdkService *soap)
{	struct cusdk__SetupStream soap_tmp_cusdk__SetupStream;
	cusdk__SetupStreamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetupStream(soap, &soap_tmp_cusdk__SetupStream);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetupStream(soap, &soap_tmp_cusdk__SetupStream, "cusdk:SetupStream", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetupStream(soap_tmp_cusdk__SetupStream.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetupStreamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetupStreamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PlayStream(cusdkService *soap)
{	struct cusdk__PlayStream soap_tmp_cusdk__PlayStream;
	cusdk__PlayStreamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PlayStream(soap, &soap_tmp_cusdk__PlayStream);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PlayStream(soap, &soap_tmp_cusdk__PlayStream, "cusdk:PlayStream", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PlayStream(soap_tmp_cusdk__PlayStream.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PlayStreamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PlayStreamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopStream(cusdkService *soap)
{	struct cusdk__StopStream soap_tmp_cusdk__StopStream;
	cusdk__StopStreamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopStream(soap, &soap_tmp_cusdk__StopStream);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopStream(soap, &soap_tmp_cusdk__StopStream, "cusdk:StopStream", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopStream(soap_tmp_cusdk__StopStream.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopStreamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopStreamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SendKeyFrame(cusdkService *soap)
{	struct cusdk__SendKeyFrame soap_tmp_cusdk__SendKeyFrame;
	cusdk__SendKeyFrameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SendKeyFrame(soap, &soap_tmp_cusdk__SendKeyFrame);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SendKeyFrame(soap, &soap_tmp_cusdk__SendKeyFrame, "cusdk:SendKeyFrame", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SendKeyFrame(soap_tmp_cusdk__SendKeyFrame.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SendKeyFrameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SendKeyFrameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzCtrl(cusdkService *soap)
{	struct cusdk__PtzCtrl soap_tmp_cusdk__PtzCtrl;
	cusdk__PtzCtrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzCtrl(soap, &soap_tmp_cusdk__PtzCtrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzCtrl(soap, &soap_tmp_cusdk__PtzCtrl, "cusdk:PtzCtrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzCtrl(soap_tmp_cusdk__PtzCtrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzCtrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzCtrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzLock(cusdkService *soap)
{	struct cusdk__PtzLock soap_tmp_cusdk__PtzLock;
	cusdk__PtzLockRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzLock(soap, &soap_tmp_cusdk__PtzLock);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzLock(soap, &soap_tmp_cusdk__PtzLock, "cusdk:PtzLock", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzLock(soap_tmp_cusdk__PtzLock.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzLockRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzLockRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzUnlock(cusdkService *soap)
{	struct cusdk__PtzUnlock soap_tmp_cusdk__PtzUnlock;
	cusdk__PtzUnlockRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzUnlock(soap, &soap_tmp_cusdk__PtzUnlock);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzUnlock(soap, &soap_tmp_cusdk__PtzUnlock, "cusdk:PtzUnlock", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzUnlock(soap_tmp_cusdk__PtzUnlock.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzUnlockRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzUnlockRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PtzUnlockAll(cusdkService *soap)
{	struct cusdk__PtzUnlockAll soap_tmp_cusdk__PtzUnlockAll;
	cusdk__PtzUnlockAllRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PtzUnlockAll(soap, &soap_tmp_cusdk__PtzUnlockAll);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PtzUnlockAll(soap, &soap_tmp_cusdk__PtzUnlockAll, "cusdk:PtzUnlockAll", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PtzUnlockAll(soap_tmp_cusdk__PtzUnlockAll.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PtzUnlockAllRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PtzUnlockAllRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SendTransData(cusdkService *soap)
{	struct cusdk__SendTransData soap_tmp_cusdk__SendTransData;
	cusdk__SendTransDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SendTransData(soap, &soap_tmp_cusdk__SendTransData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SendTransData(soap, &soap_tmp_cusdk__SendTransData, "cusdk:SendTransData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SendTransData(soap_tmp_cusdk__SendTransData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SendTransDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SendTransDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserInfo(cusdkService *soap)
{	struct cusdk__GetUserInfo soap_tmp_cusdk__GetUserInfo;
	cusdk__GetUserInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserInfo(soap, &soap_tmp_cusdk__GetUserInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserInfo(soap, &soap_tmp_cusdk__GetUserInfo, "cusdk:GetUserInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserInfo(soap_tmp_cusdk__GetUserInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserGroupInfo(cusdkService *soap)
{	struct cusdk__GetUserGroupInfo soap_tmp_cusdk__GetUserGroupInfo;
	cusdk__GetUserGroupInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserGroupInfo(soap, &soap_tmp_cusdk__GetUserGroupInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserGroupInfo(soap, &soap_tmp_cusdk__GetUserGroupInfo, "cusdk:GetUserGroupInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserGroupInfo(soap_tmp_cusdk__GetUserGroupInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserGroupInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserGroupInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserData(cusdkService *soap)
{	struct cusdk__GetUserData soap_tmp_cusdk__GetUserData;
	cusdk__GetUserDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserData(soap, &soap_tmp_cusdk__GetUserData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserData(soap, &soap_tmp_cusdk__GetUserData, "cusdk:GetUserData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserData(soap_tmp_cusdk__GetUserData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetUserData(cusdkService *soap)
{	struct cusdk__SetUserData soap_tmp_cusdk__SetUserData;
	cusdk__SetUserDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetUserData(soap, &soap_tmp_cusdk__SetUserData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetUserData(soap, &soap_tmp_cusdk__SetUserData, "cusdk:SetUserData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetUserData(soap_tmp_cusdk__SetUserData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetUserDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetUserDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelUserData(cusdkService *soap)
{	struct cusdk__DelUserData soap_tmp_cusdk__DelUserData;
	cusdk__DelUserDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelUserData(soap, &soap_tmp_cusdk__DelUserData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelUserData(soap, &soap_tmp_cusdk__DelUserData, "cusdk:DelUserData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelUserData(soap_tmp_cusdk__DelUserData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelUserDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelUserDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartExportDeviceData(cusdkService *soap)
{	struct cusdk__StartExportDeviceData soap_tmp_cusdk__StartExportDeviceData;
	cusdk__StartExportDeviceDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartExportDeviceData(soap, &soap_tmp_cusdk__StartExportDeviceData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartExportDeviceData(soap, &soap_tmp_cusdk__StartExportDeviceData, "cusdk:StartExportDeviceData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartExportDeviceData(soap_tmp_cusdk__StartExportDeviceData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartExportDeviceDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartExportDeviceDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopExportDeviceData(cusdkService *soap)
{	struct cusdk__StopExportDeviceData soap_tmp_cusdk__StopExportDeviceData;
	cusdk__StopExportDeviceDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopExportDeviceData(soap, &soap_tmp_cusdk__StopExportDeviceData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopExportDeviceData(soap, &soap_tmp_cusdk__StopExportDeviceData, "cusdk:StopExportDeviceData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopExportDeviceData(soap_tmp_cusdk__StopExportDeviceData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopExportDeviceDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopExportDeviceDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevGroupByGroup(cusdkService *soap)
{	struct cusdk__GetUserDevGroupByGroup soap_tmp_cusdk__GetUserDevGroupByGroup;
	cusdk__GetUserDevGroupByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevGroupByGroup(soap, &soap_tmp_cusdk__GetUserDevGroupByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevGroupByGroup(soap, &soap_tmp_cusdk__GetUserDevGroupByGroup, "cusdk:GetUserDevGroupByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevGroupByGroup(soap_tmp_cusdk__GetUserDevGroupByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevGroupByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevGroupByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevByGroup(cusdkService *soap)
{	struct cusdk__GetUserDevByGroup soap_tmp_cusdk__GetUserDevByGroup;
	cusdk__GetUserDevByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevByGroup(soap, &soap_tmp_cusdk__GetUserDevByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevByGroup(soap, &soap_tmp_cusdk__GetUserDevByGroup, "cusdk:GetUserDevByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevByGroup(soap_tmp_cusdk__GetUserDevByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevGroup(cusdkService *soap)
{	struct cusdk__GetUserDevGroup soap_tmp_cusdk__GetUserDevGroup;
	cusdk__GetUserDevGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevGroup(soap, &soap_tmp_cusdk__GetUserDevGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevGroup(soap, &soap_tmp_cusdk__GetUserDevGroup, "cusdk:GetUserDevGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevGroup(soap_tmp_cusdk__GetUserDevGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDomainDevGroup(cusdkService *soap)
{	struct cusdk__GetDomainDevGroup soap_tmp_cusdk__GetDomainDevGroup;
	cusdk__GetDomainDevGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDomainDevGroup(soap, &soap_tmp_cusdk__GetDomainDevGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDomainDevGroup(soap, &soap_tmp_cusdk__GetDomainDevGroup, "cusdk:GetDomainDevGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDomainDevGroup(soap_tmp_cusdk__GetDomainDevGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDomainDevGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDomainDevGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDev(cusdkService *soap)
{	struct cusdk__GetUserDev soap_tmp_cusdk__GetUserDev;
	cusdk__GetUserDevRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDev(soap, &soap_tmp_cusdk__GetUserDev);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDev(soap, &soap_tmp_cusdk__GetUserDev, "cusdk:GetUserDev", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDev(soap_tmp_cusdk__GetUserDev.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDevRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDevRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDevByDomain(cusdkService *soap)
{	struct cusdk__GetUserDevByDomain soap_tmp_cusdk__GetUserDevByDomain;
	cusdk__GetDevByDomainRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDevByDomain(soap, &soap_tmp_cusdk__GetUserDevByDomain);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDevByDomain(soap, &soap_tmp_cusdk__GetUserDevByDomain, "cusdk:GetUserDevByDomain", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDevByDomain(soap_tmp_cusdk__GetUserDevByDomain.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDevByDomainRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDevByDomainRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceGroupDeviceRelations(cusdkService *soap)
{	struct cusdk__GetDeviceGroupDeviceRelations soap_tmp_cusdk__GetDeviceGroupDeviceRelations;
	cusdk__GetDeviceGroupDeviceRelationsRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceGroupDeviceRelations(soap, &soap_tmp_cusdk__GetDeviceGroupDeviceRelations);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceGroupDeviceRelations(soap, &soap_tmp_cusdk__GetDeviceGroupDeviceRelations, "cusdk:GetDeviceGroupDeviceRelations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceGroupDeviceRelations(soap_tmp_cusdk__GetDeviceGroupDeviceRelations.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceGroupDeviceRelationsRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceGroupDeviceRelationsRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateDeviceGroup(cusdkService *soap)
{	struct cusdk__CreateDeviceGroup soap_tmp_cusdk__CreateDeviceGroup;
	cusdk__CreateDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateDeviceGroup(soap, &soap_tmp_cusdk__CreateDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateDeviceGroup(soap, &soap_tmp_cusdk__CreateDeviceGroup, "cusdk:CreateDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateDeviceGroup(soap_tmp_cusdk__CreateDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelDeviceGroup(cusdkService *soap)
{	struct cusdk__DelDeviceGroup soap_tmp_cusdk__DelDeviceGroup;
	cusdk__DelDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelDeviceGroup(soap, &soap_tmp_cusdk__DelDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelDeviceGroup(soap, &soap_tmp_cusdk__DelDeviceGroup, "cusdk:DelDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelDeviceGroup(soap_tmp_cusdk__DelDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyDeviceGroup(cusdkService *soap)
{	struct cusdk__ModifyDeviceGroup soap_tmp_cusdk__ModifyDeviceGroup;
	cusdk__ModifyDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyDeviceGroup(soap, &soap_tmp_cusdk__ModifyDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyDeviceGroup(soap, &soap_tmp_cusdk__ModifyDeviceGroup, "cusdk:ModifyDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyDeviceGroup(soap_tmp_cusdk__ModifyDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceGroupAddDevice(cusdkService *soap)
{	struct cusdk__DeviceGroupAddDevice soap_tmp_cusdk__DeviceGroupAddDevice;
	cusdk__DeviceGroupAddDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceGroupAddDevice(soap, &soap_tmp_cusdk__DeviceGroupAddDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceGroupAddDevice(soap, &soap_tmp_cusdk__DeviceGroupAddDevice, "cusdk:DeviceGroupAddDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceGroupAddDevice(soap_tmp_cusdk__DeviceGroupAddDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceGroupAddDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceGroupAddDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceGroupAddGroup(cusdkService *soap)
{	struct cusdk__DeviceGroupAddGroup soap_tmp_cusdk__DeviceGroupAddGroup;
	cusdk__DeviceGroupAddGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceGroupAddGroup(soap, &soap_tmp_cusdk__DeviceGroupAddGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceGroupAddGroup(soap, &soap_tmp_cusdk__DeviceGroupAddGroup, "cusdk:DeviceGroupAddGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceGroupAddGroup(soap_tmp_cusdk__DeviceGroupAddGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceGroupAddGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceGroupAddGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceGroupDelDevice(cusdkService *soap)
{	struct cusdk__DeviceGroupDelDevice soap_tmp_cusdk__DeviceGroupDelDevice;
	cusdk__DeviceGroupDelDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceGroupDelDevice(soap, &soap_tmp_cusdk__DeviceGroupDelDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceGroupDelDevice(soap, &soap_tmp_cusdk__DeviceGroupDelDevice, "cusdk:DeviceGroupDelDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceGroupDelDevice(soap_tmp_cusdk__DeviceGroupDelDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceGroupDelDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceGroupDelDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserList(cusdkService *soap)
{	struct cusdk__GetUserList soap_tmp_cusdk__GetUserList;
	cusdk__GetUserListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserList(soap, &soap_tmp_cusdk__GetUserList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserList(soap, &soap_tmp_cusdk__GetUserList, "cusdk:GetUserList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserList(soap_tmp_cusdk__GetUserList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserGroupList(cusdkService *soap)
{	struct cusdk__GetUserGroupList soap_tmp_cusdk__GetUserGroupList;
	cusdk__GetUserGroupListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserGroupList(soap, &soap_tmp_cusdk__GetUserGroupList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserGroupList(soap, &soap_tmp_cusdk__GetUserGroupList, "cusdk:GetUserGroupList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserGroupList(soap_tmp_cusdk__GetUserGroupList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserGroupListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserGroupListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateUserGroup(cusdkService *soap)
{	struct cusdk__CreateUserGroup soap_tmp_cusdk__CreateUserGroup;
	cusdk__CreateUserGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateUserGroup(soap, &soap_tmp_cusdk__CreateUserGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateUserGroup(soap, &soap_tmp_cusdk__CreateUserGroup, "cusdk:CreateUserGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateUserGroup(soap_tmp_cusdk__CreateUserGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateUserGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateUserGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelUserGroup(cusdkService *soap)
{	struct cusdk__DelUserGroup soap_tmp_cusdk__DelUserGroup;
	cusdk__DelUserGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelUserGroup(soap, &soap_tmp_cusdk__DelUserGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelUserGroup(soap, &soap_tmp_cusdk__DelUserGroup, "cusdk:DelUserGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelUserGroup(soap_tmp_cusdk__DelUserGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelUserGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelUserGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyUserGroup(cusdkService *soap)
{	struct cusdk__ModifyUserGroup soap_tmp_cusdk__ModifyUserGroup;
	cusdk__ModifyUserGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyUserGroup(soap, &soap_tmp_cusdk__ModifyUserGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyUserGroup(soap, &soap_tmp_cusdk__ModifyUserGroup, "cusdk:ModifyUserGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyUserGroup(soap_tmp_cusdk__ModifyUserGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyUserGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyUserGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateUser(cusdkService *soap)
{	struct cusdk__CreateUser soap_tmp_cusdk__CreateUser;
	cusdk__CreateUserRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateUser(soap, &soap_tmp_cusdk__CreateUser);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateUser(soap, &soap_tmp_cusdk__CreateUser, "cusdk:CreateUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateUser(soap_tmp_cusdk__CreateUser.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateUserRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateUserRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelUser(cusdkService *soap)
{	struct cusdk__DelUser soap_tmp_cusdk__DelUser;
	cusdk__DelUserRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelUser(soap, &soap_tmp_cusdk__DelUser);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelUser(soap, &soap_tmp_cusdk__DelUser, "cusdk:DelUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelUser(soap_tmp_cusdk__DelUser.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelUserRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelUserRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyUser(cusdkService *soap)
{	struct cusdk__ModifyUser soap_tmp_cusdk__ModifyUser;
	cusdk__ModifyUserRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyUser(soap, &soap_tmp_cusdk__ModifyUser);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyUser(soap, &soap_tmp_cusdk__ModifyUser, "cusdk:ModifyUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyUser(soap_tmp_cusdk__ModifyUser.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyUserRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyUserRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ChangePassword(cusdkService *soap)
{	struct cusdk__ChangePassword soap_tmp_cusdk__ChangePassword;
	cusdk__ChangePasswordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ChangePassword(soap, &soap_tmp_cusdk__ChangePassword);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ChangePassword(soap, &soap_tmp_cusdk__ChangePassword, "cusdk:ChangePassword", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ChangePassword(soap_tmp_cusdk__ChangePassword.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ChangePasswordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ChangePasswordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGetDeviceByGroup(cusdkService *soap)
{	struct cusdk__UserGetDeviceByGroup soap_tmp_cusdk__UserGetDeviceByGroup;
	cusdk__UserGetDeviceByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGetDeviceByGroup(soap, &soap_tmp_cusdk__UserGetDeviceByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGetDeviceByGroup(soap, &soap_tmp_cusdk__UserGetDeviceByGroup, "cusdk:UserGetDeviceByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGetDeviceByGroup(soap_tmp_cusdk__UserGetDeviceByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGetDeviceByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGetDeviceByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserAddDevice(cusdkService *soap)
{	struct cusdk__UserAddDevice soap_tmp_cusdk__UserAddDevice;
	cusdk__UserAddDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserAddDevice(soap, &soap_tmp_cusdk__UserAddDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserAddDevice(soap, &soap_tmp_cusdk__UserAddDevice, "cusdk:UserAddDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserAddDevice(soap_tmp_cusdk__UserAddDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserAddDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserAddDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserDelDevice(cusdkService *soap)
{	struct cusdk__UserDelDevice soap_tmp_cusdk__UserDelDevice;
	cusdk__UserDelDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserDelDevice(soap, &soap_tmp_cusdk__UserDelDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserDelDevice(soap, &soap_tmp_cusdk__UserDelDevice, "cusdk:UserDelDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserDelDevice(soap_tmp_cusdk__UserDelDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserDelDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserDelDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGetTVWall(cusdkService *soap)
{	struct cusdk__UserGetTVWall soap_tmp_cusdk__UserGetTVWall;
	cusdk__UserGetTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGetTVWall(soap, &soap_tmp_cusdk__UserGetTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGetTVWall(soap, &soap_tmp_cusdk__UserGetTVWall, "cusdk:UserGetTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGetTVWall(soap_tmp_cusdk__UserGetTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGetTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGetTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserAddTVWall(cusdkService *soap)
{	struct cusdk__UserAddTVWall soap_tmp_cusdk__UserAddTVWall;
	cusdk__UserAddTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserAddTVWall(soap, &soap_tmp_cusdk__UserAddTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserAddTVWall(soap, &soap_tmp_cusdk__UserAddTVWall, "cusdk:UserAddTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserAddTVWall(soap_tmp_cusdk__UserAddTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserAddTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserAddTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserDelTVWall(cusdkService *soap)
{	struct cusdk__UserDelTVWall soap_tmp_cusdk__UserDelTVWall;
	cusdk__UserDelTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserDelTVWall(soap, &soap_tmp_cusdk__UserDelTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserDelTVWall(soap, &soap_tmp_cusdk__UserDelTVWall, "cusdk:UserDelTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserDelTVWall(soap_tmp_cusdk__UserDelTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserDelTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserDelTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserModifyDevice(cusdkService *soap)
{	struct cusdk__UserModifyDevice soap_tmp_cusdk__UserModifyDevice;
	cusdk__UserModifyDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserModifyDevice(soap, &soap_tmp_cusdk__UserModifyDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserModifyDevice(soap, &soap_tmp_cusdk__UserModifyDevice, "cusdk:UserModifyDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserModifyDevice(soap_tmp_cusdk__UserModifyDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserModifyDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserModifyDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetAuthorizationDevice(cusdkService *soap)
{	struct cusdk__GetAuthorizationDevice soap_tmp_cusdk__GetAuthorizationDevice;
	cusdk__GetAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetAuthorizationDevice(soap, &soap_tmp_cusdk__GetAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetAuthorizationDevice(soap, &soap_tmp_cusdk__GetAuthorizationDevice, "cusdk:GetAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAuthorizationDevice(soap_tmp_cusdk__GetAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__AddAuthorizationDevice(cusdkService *soap)
{	struct cusdk__AddAuthorizationDevice soap_tmp_cusdk__AddAuthorizationDevice;
	cusdk__AddAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__AddAuthorizationDevice(soap, &soap_tmp_cusdk__AddAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__AddAuthorizationDevice(soap, &soap_tmp_cusdk__AddAuthorizationDevice, "cusdk:AddAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AddAuthorizationDevice(soap_tmp_cusdk__AddAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:AddAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:AddAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelAuthorizationDevice(cusdkService *soap)
{	struct cusdk__DelAuthorizationDevice soap_tmp_cusdk__DelAuthorizationDevice;
	cusdk__DelAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelAuthorizationDevice(soap, &soap_tmp_cusdk__DelAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelAuthorizationDevice(soap, &soap_tmp_cusdk__DelAuthorizationDevice, "cusdk:DelAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelAuthorizationDevice(soap_tmp_cusdk__DelAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyAuthorizationDevice(cusdkService *soap)
{	struct cusdk__ModifyAuthorizationDevice soap_tmp_cusdk__ModifyAuthorizationDevice;
	cusdk__ModifyAuthorizationDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyAuthorizationDevice(soap, &soap_tmp_cusdk__ModifyAuthorizationDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyAuthorizationDevice(soap, &soap_tmp_cusdk__ModifyAuthorizationDevice, "cusdk:ModifyAuthorizationDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyAuthorizationDevice(soap_tmp_cusdk__ModifyAuthorizationDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyAuthorizationDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyAuthorizationDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceBaseInfo(cusdkService *soap)
{	struct cusdk__GetDeviceBaseInfo soap_tmp_cusdk__GetDeviceBaseInfo;
	cusdk__GetDeviceBaseInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceBaseInfo(soap, &soap_tmp_cusdk__GetDeviceBaseInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceBaseInfo(soap, &soap_tmp_cusdk__GetDeviceBaseInfo, "cusdk:GetDeviceBaseInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceBaseInfo(soap_tmp_cusdk__GetDeviceBaseInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceBaseInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceBaseInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetRCSSysParam(cusdkService *soap)
{	struct cusdk__GetRCSSysParam soap_tmp_cusdk__GetRCSSysParam;
	cusdk__GetRCSSysParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetRCSSysParam(soap, &soap_tmp_cusdk__GetRCSSysParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetRCSSysParam(soap, &soap_tmp_cusdk__GetRCSSysParam, "cusdk:GetRCSSysParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetRCSSysParam(soap_tmp_cusdk__GetRCSSysParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetRCSSysParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetRCSSysParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetRCSSysParam(cusdkService *soap)
{	struct cusdk__SetRCSSysParam soap_tmp_cusdk__SetRCSSysParam;
	cusdk__SetRCSSysParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetRCSSysParam(soap, &soap_tmp_cusdk__SetRCSSysParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetRCSSysParam(soap, &soap_tmp_cusdk__SetRCSSysParam, "cusdk:SetRCSSysParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetRCSSysParam(soap_tmp_cusdk__SetRCSSysParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetRCSSysParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetRCSSysParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetNruList(cusdkService *soap)
{	struct cusdk__GetNruList soap_tmp_cusdk__GetNruList;
	cusdk__GetNruListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetNruList(soap, &soap_tmp_cusdk__GetNruList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetNruList(soap, &soap_tmp_cusdk__GetNruList, "cusdk:GetNruList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetNruList(soap_tmp_cusdk__GetNruList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetNruListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetNruListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDiskList(cusdkService *soap)
{	struct cusdk__GetDiskList soap_tmp_cusdk__GetDiskList;
	cusdk__GetDiskListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDiskList(soap, &soap_tmp_cusdk__GetDiskList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDiskList(soap, &soap_tmp_cusdk__GetDiskList, "cusdk:GetDiskList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDiskList(soap_tmp_cusdk__GetDiskList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDiskListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDiskListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetPuChnBinding(cusdkService *soap)
{	struct cusdk__GetPuChnBinding soap_tmp_cusdk__GetPuChnBinding;
	cusdk__GetPuChnBindingRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetPuChnBinding(soap, &soap_tmp_cusdk__GetPuChnBinding);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetPuChnBinding(soap, &soap_tmp_cusdk__GetPuChnBinding, "cusdk:GetPuChnBinding", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetPuChnBinding(soap_tmp_cusdk__GetPuChnBinding.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetPuChnBindingRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetPuChnBindingRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__BindPu(cusdkService *soap)
{	struct cusdk__BindPu soap_tmp_cusdk__BindPu;
	cusdk__BindPuRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__BindPu(soap, &soap_tmp_cusdk__BindPu);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__BindPu(soap, &soap_tmp_cusdk__BindPu, "cusdk:BindPu", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BindPu(soap_tmp_cusdk__BindPu.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:BindPuRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:BindPuRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UnbindPu(cusdkService *soap)
{	struct cusdk__UnbindPu soap_tmp_cusdk__UnbindPu;
	cusdk__UnbindPuRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UnbindPu(soap, &soap_tmp_cusdk__UnbindPu);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UnbindPu(soap, &soap_tmp_cusdk__UnbindPu, "cusdk:UnbindPu", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UnbindPu(soap_tmp_cusdk__UnbindPu.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UnbindPuRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UnbindPuRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryRecordDays(cusdkService *soap)
{	struct cusdk__QueryRecordDays soap_tmp_cusdk__QueryRecordDays;
	cusdk__QueryRecordDaysRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryRecordDays(soap, &soap_tmp_cusdk__QueryRecordDays);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryRecordDays(soap, &soap_tmp_cusdk__QueryRecordDays, "cusdk:QueryRecordDays", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryRecordDays(soap_tmp_cusdk__QueryRecordDays.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryRecordDaysRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryRecordDaysRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryRecord(cusdkService *soap)
{	struct cusdk__QueryRecord soap_tmp_cusdk__QueryRecord;
	cusdk__QueryRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryRecord(soap, &soap_tmp_cusdk__QueryRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryRecord(soap, &soap_tmp_cusdk__QueryRecord, "cusdk:QueryRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryRecord(soap_tmp_cusdk__QueryRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartPlatformRecord(cusdkService *soap)
{	struct cusdk__StartPlatformRecord soap_tmp_cusdk__StartPlatformRecord;
	cusdk__StartPlatformRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartPlatformRecord(soap, &soap_tmp_cusdk__StartPlatformRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartPlatformRecord(soap, &soap_tmp_cusdk__StartPlatformRecord, "cusdk:StartPlatformRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartPlatformRecord(soap_tmp_cusdk__StartPlatformRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartPlatformRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartPlatformRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopPlatformRecord(cusdkService *soap)
{	struct cusdk__StopPlatformRecord soap_tmp_cusdk__StopPlatformRecord;
	cusdk__StopPlatformRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopPlatformRecord(soap, &soap_tmp_cusdk__StopPlatformRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopPlatformRecord(soap, &soap_tmp_cusdk__StopPlatformRecord, "cusdk:StopPlatformRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopPlatformRecord(soap_tmp_cusdk__StopPlatformRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopPlatformRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopPlatformRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartPuRecord(cusdkService *soap)
{	struct cusdk__StartPuRecord soap_tmp_cusdk__StartPuRecord;
	cusdk__StartPuRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartPuRecord(soap, &soap_tmp_cusdk__StartPuRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartPuRecord(soap, &soap_tmp_cusdk__StartPuRecord, "cusdk:StartPuRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartPuRecord(soap_tmp_cusdk__StartPuRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartPuRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartPuRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopPuRecord(cusdkService *soap)
{	struct cusdk__StopPuRecord soap_tmp_cusdk__StopPuRecord;
	cusdk__StopPuRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopPuRecord(soap, &soap_tmp_cusdk__StopPuRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopPuRecord(soap, &soap_tmp_cusdk__StopPuRecord, "cusdk:StopPuRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopPuRecord(soap_tmp_cusdk__StopPuRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopPuRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopPuRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetupPlayRecord(cusdkService *soap)
{	struct cusdk__SetupPlayRecord soap_tmp_cusdk__SetupPlayRecord;
	cusdk__SetupPlayRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetupPlayRecord(soap, &soap_tmp_cusdk__SetupPlayRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetupPlayRecord(soap, &soap_tmp_cusdk__SetupPlayRecord, "cusdk:SetupPlayRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetupPlayRecord(soap_tmp_cusdk__SetupPlayRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetupPlayRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetupPlayRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PlayRecord(cusdkService *soap)
{	struct cusdk__PlayRecord soap_tmp_cusdk__PlayRecord;
	cusdk__PlayRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PlayRecord(soap, &soap_tmp_cusdk__PlayRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PlayRecord(soap, &soap_tmp_cusdk__PlayRecord, "cusdk:PlayRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PlayRecord(soap_tmp_cusdk__PlayRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PlayRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PlayRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__VcrCtrl(cusdkService *soap)
{	struct cusdk__VcrCtrl soap_tmp_cusdk__VcrCtrl;
	cusdk__VcrCtrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__VcrCtrl(soap, &soap_tmp_cusdk__VcrCtrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__VcrCtrl(soap, &soap_tmp_cusdk__VcrCtrl, "cusdk:VcrCtrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->VcrCtrl(soap_tmp_cusdk__VcrCtrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:VcrCtrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:VcrCtrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCurRecordPlayPosition(cusdkService *soap)
{	struct cusdk__GetCurRecordPlayPosition soap_tmp_cusdk__GetCurRecordPlayPosition;
	cusdk__GetCurRecordPlayPositionRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCurRecordPlayPosition(soap, &soap_tmp_cusdk__GetCurRecordPlayPosition);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCurRecordPlayPosition(soap, &soap_tmp_cusdk__GetCurRecordPlayPosition, "cusdk:GetCurRecordPlayPosition", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCurRecordPlayPosition(soap_tmp_cusdk__GetCurRecordPlayPosition.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCurRecordPlayPositionRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCurRecordPlayPositionRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopPlayRecord(cusdkService *soap)
{	struct cusdk__StopPlayRecord soap_tmp_cusdk__StopPlayRecord;
	cusdk__StopPlayRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopPlayRecord(soap, &soap_tmp_cusdk__StopPlayRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopPlayRecord(soap, &soap_tmp_cusdk__StopPlayRecord, "cusdk:StopPlayRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopPlayRecord(soap_tmp_cusdk__StopPlayRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopPlayRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopPlayRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetupDownloadRecord(cusdkService *soap)
{	struct cusdk__SetupDownloadRecord soap_tmp_cusdk__SetupDownloadRecord;
	cusdk__SetupDownloadRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetupDownloadRecord(soap, &soap_tmp_cusdk__SetupDownloadRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetupDownloadRecord(soap, &soap_tmp_cusdk__SetupDownloadRecord, "cusdk:SetupDownloadRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetupDownloadRecord(soap_tmp_cusdk__SetupDownloadRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetupDownloadRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetupDownloadRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartDownloadRecord(cusdkService *soap)
{	struct cusdk__StartDownloadRecord soap_tmp_cusdk__StartDownloadRecord;
	cusdk__StartDownloadRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartDownloadRecord(soap, &soap_tmp_cusdk__StartDownloadRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartDownloadRecord(soap, &soap_tmp_cusdk__StartDownloadRecord, "cusdk:StartDownloadRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartDownloadRecord(soap_tmp_cusdk__StartDownloadRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartDownloadRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartDownloadRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopDownloadRecord(cusdkService *soap)
{	struct cusdk__StopDownloadRecord soap_tmp_cusdk__StopDownloadRecord;
	cusdk__StopDownloadRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopDownloadRecord(soap, &soap_tmp_cusdk__StopDownloadRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopDownloadRecord(soap, &soap_tmp_cusdk__StopDownloadRecord, "cusdk:StopDownloadRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopDownloadRecord(soap_tmp_cusdk__StopDownloadRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopDownloadRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopDownloadRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetRecordPlan(cusdkService *soap)
{	struct cusdk__GetRecordPlan soap_tmp_cusdk__GetRecordPlan;
	cusdk__GetRecordPlanRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetRecordPlan(soap, &soap_tmp_cusdk__GetRecordPlan);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetRecordPlan(soap, &soap_tmp_cusdk__GetRecordPlan, "cusdk:GetRecordPlan", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetRecordPlan(soap_tmp_cusdk__GetRecordPlan.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetRecordPlanRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetRecordPlanRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetRecordPlan(cusdkService *soap)
{	struct cusdk__SetRecordPlan soap_tmp_cusdk__SetRecordPlan;
	cusdk__SetRecordPlanRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetRecordPlan(soap, &soap_tmp_cusdk__SetRecordPlan);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetRecordPlan(soap, &soap_tmp_cusdk__SetRecordPlan, "cusdk:SetRecordPlan", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetRecordPlan(soap_tmp_cusdk__SetRecordPlan.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetRecordPlanRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetRecordPlanRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetAllTVWall(cusdkService *soap)
{	struct cusdk__GetAllTVWall soap_tmp_cusdk__GetAllTVWall;
	cusdk__GetAllTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetAllTVWall(soap, &soap_tmp_cusdk__GetAllTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetAllTVWall(soap, &soap_tmp_cusdk__GetAllTVWall, "cusdk:GetAllTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAllTVWall(soap_tmp_cusdk__GetAllTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetAllTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetAllTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetTVWall(cusdkService *soap)
{	struct cusdk__GetTVWall soap_tmp_cusdk__GetTVWall;
	cusdk__GetTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetTVWall(soap, &soap_tmp_cusdk__GetTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetTVWall(soap, &soap_tmp_cusdk__GetTVWall, "cusdk:GetTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetTVWall(soap_tmp_cusdk__GetTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateTVWall(cusdkService *soap)
{	struct cusdk__CreateTVWall soap_tmp_cusdk__CreateTVWall;
	cusdk__CreateTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateTVWall(soap, &soap_tmp_cusdk__CreateTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateTVWall(soap, &soap_tmp_cusdk__CreateTVWall, "cusdk:CreateTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateTVWall(soap_tmp_cusdk__CreateTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelTVWall(cusdkService *soap)
{	struct cusdk__DelTVWall soap_tmp_cusdk__DelTVWall;
	cusdk__DelTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelTVWall(soap, &soap_tmp_cusdk__DelTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelTVWall(soap, &soap_tmp_cusdk__DelTVWall, "cusdk:DelTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelTVWall(soap_tmp_cusdk__DelTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyTVWall(cusdkService *soap)
{	struct cusdk__ModifyTVWall soap_tmp_cusdk__ModifyTVWall;
	cusdk__ModifyTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyTVWall(soap, &soap_tmp_cusdk__ModifyTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyTVWall(soap, &soap_tmp_cusdk__ModifyTVWall, "cusdk:ModifyTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyTVWall(soap_tmp_cusdk__ModifyTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallStartPlay(cusdkService *soap)
{	struct cusdk__TVWallStartPlay soap_tmp_cusdk__TVWallStartPlay;
	cusdk__TVWallStartPlayRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallStartPlay(soap, &soap_tmp_cusdk__TVWallStartPlay);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallStartPlay(soap, &soap_tmp_cusdk__TVWallStartPlay, "cusdk:TVWallStartPlay", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallStartPlay(soap_tmp_cusdk__TVWallStartPlay.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallStartPlayRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallStartPlayRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallStopPlay(cusdkService *soap)
{	struct cusdk__TVWallStopPlay soap_tmp_cusdk__TVWallStopPlay;
	cusdk__TVWallStopPlayRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallStopPlay(soap, &soap_tmp_cusdk__TVWallStopPlay);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallStopPlay(soap, &soap_tmp_cusdk__TVWallStopPlay, "cusdk:TVWallStopPlay", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallStopPlay(soap_tmp_cusdk__TVWallStopPlay.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallStopPlayRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallStopPlayRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallWindowPollContrl(cusdkService *soap)
{	struct cusdk__TVWallWindowPollContrl soap_tmp_cusdk__TVWallWindowPollContrl;
	cusdk__TVWallWindowPollContrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallWindowPollContrl(soap, &soap_tmp_cusdk__TVWallWindowPollContrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallWindowPollContrl(soap, &soap_tmp_cusdk__TVWallWindowPollContrl, "cusdk:TVWallWindowPollContrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallWindowPollContrl(soap_tmp_cusdk__TVWallWindowPollContrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallWindowPollContrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallWindowPollContrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallSaveScheme(cusdkService *soap)
{	struct cusdk__TVWallSaveScheme soap_tmp_cusdk__TVWallSaveScheme;
	cusdk__TVWallSaveSchemeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallSaveScheme(soap, &soap_tmp_cusdk__TVWallSaveScheme);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallSaveScheme(soap, &soap_tmp_cusdk__TVWallSaveScheme, "cusdk:TVWallSaveScheme", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallSaveScheme(soap_tmp_cusdk__TVWallSaveScheme.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallSaveSchemeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallSaveSchemeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallDelScheme(cusdkService *soap)
{	struct cusdk__TVWallDelScheme soap_tmp_cusdk__TVWallDelScheme;
	cusdk__TVWallDelSchemeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallDelScheme(soap, &soap_tmp_cusdk__TVWallDelScheme);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallDelScheme(soap, &soap_tmp_cusdk__TVWallDelScheme, "cusdk:TVWallDelScheme", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallDelScheme(soap_tmp_cusdk__TVWallDelScheme.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallDelSchemeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallDelSchemeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallLoadScheme(cusdkService *soap)
{	struct cusdk__TVWallLoadScheme soap_tmp_cusdk__TVWallLoadScheme;
	cusdk__TVWallLoadSchemeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallLoadScheme(soap, &soap_tmp_cusdk__TVWallLoadScheme);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallLoadScheme(soap, &soap_tmp_cusdk__TVWallLoadScheme, "cusdk:TVWallLoadScheme", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallLoadScheme(soap_tmp_cusdk__TVWallLoadScheme.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallLoadSchemeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallLoadSchemeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallQueryScheme(cusdkService *soap)
{	struct cusdk__TVWallQueryScheme soap_tmp_cusdk__TVWallQueryScheme;
	cusdk__TVWallQuerySchemeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallQueryScheme(soap, &soap_tmp_cusdk__TVWallQueryScheme);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallQueryScheme(soap, &soap_tmp_cusdk__TVWallQueryScheme, "cusdk:TVWallQueryScheme", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallQueryScheme(soap_tmp_cusdk__TVWallQueryScheme.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallQuerySchemeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallQuerySchemeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallSetSchemePoll(cusdkService *soap)
{	struct cusdk__TVWallSetSchemePoll soap_tmp_cusdk__TVWallSetSchemePoll;
	cusdk__TVWallSetSchemePollRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallSetSchemePoll(soap, &soap_tmp_cusdk__TVWallSetSchemePoll);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallSetSchemePoll(soap, &soap_tmp_cusdk__TVWallSetSchemePoll, "cusdk:TVWallSetSchemePoll", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallSetSchemePoll(soap_tmp_cusdk__TVWallSetSchemePoll.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallSetSchemePollRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallSetSchemePollRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallGetSchemePoll(cusdkService *soap)
{	struct cusdk__TVWallGetSchemePoll soap_tmp_cusdk__TVWallGetSchemePoll;
	cusdk__TVWallGetSchemePollRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallGetSchemePoll(soap, &soap_tmp_cusdk__TVWallGetSchemePoll);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallGetSchemePoll(soap, &soap_tmp_cusdk__TVWallGetSchemePoll, "cusdk:TVWallGetSchemePoll", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallGetSchemePoll(soap_tmp_cusdk__TVWallGetSchemePoll.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallGetSchemePollRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallGetSchemePollRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallSchemePollControl(cusdkService *soap)
{	struct cusdk__TVWallSchemePollControl soap_tmp_cusdk__TVWallSchemePollControl;
	cusdk__TVWallSchemePollControlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallSchemePollControl(soap, &soap_tmp_cusdk__TVWallSchemePollControl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallSchemePollControl(soap, &soap_tmp_cusdk__TVWallSchemePollControl, "cusdk:TVWallSchemePollControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallSchemePollControl(soap_tmp_cusdk__TVWallSchemePollControl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallSchemePollControlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallSchemePollControlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetTVDivNum(cusdkService *soap)
{	struct cusdk__SetTVDivNum soap_tmp_cusdk__SetTVDivNum;
	cusdk__SetTVDivNumRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetTVDivNum(soap, &soap_tmp_cusdk__SetTVDivNum);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetTVDivNum(soap, &soap_tmp_cusdk__SetTVDivNum, "cusdk:SetTVDivNum", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetTVDivNum(soap_tmp_cusdk__SetTVDivNum.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetTVDivNumRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetTVDivNumRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PlayRecordOnTVWall(cusdkService *soap)
{	struct cusdk__PlayRecordOnTVWall soap_tmp_cusdk__PlayRecordOnTVWall;
	cusdk__PlayRecordOnTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PlayRecordOnTVWall(soap, &soap_tmp_cusdk__PlayRecordOnTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PlayRecordOnTVWall(soap, &soap_tmp_cusdk__PlayRecordOnTVWall, "cusdk:PlayRecordOnTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PlayRecordOnTVWall(soap_tmp_cusdk__PlayRecordOnTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:PlayRecordOnTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:PlayRecordOnTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopPlayRecordOnTVWall(cusdkService *soap)
{	struct cusdk__StopPlayRecordOnTVWall soap_tmp_cusdk__StopPlayRecordOnTVWall;
	cusdk__StopPlayRecordOnTVWallRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopPlayRecordOnTVWall(soap, &soap_tmp_cusdk__StopPlayRecordOnTVWall);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopPlayRecordOnTVWall(soap, &soap_tmp_cusdk__StopPlayRecordOnTVWall, "cusdk:StopPlayRecordOnTVWall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopPlayRecordOnTVWall(soap_tmp_cusdk__StopPlayRecordOnTVWall.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopPlayRecordOnTVWallRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopPlayRecordOnTVWallRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetSupportMapTypes(cusdkService *soap)
{	struct cusdk__GetSupportMapTypes soap_tmp_cusdk__GetSupportMapTypes;
	cusdk__GetSupportMapTypesRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetSupportMapTypes(soap, &soap_tmp_cusdk__GetSupportMapTypes);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetSupportMapTypes(soap, &soap_tmp_cusdk__GetSupportMapTypes, "cusdk:GetSupportMapTypes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSupportMapTypes(soap_tmp_cusdk__GetSupportMapTypes.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetSupportMapTypesRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetSupportMapTypesRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetMapImageUploadUrl(cusdkService *soap)
{	struct cusdk__GetMapImageUploadUrl soap_tmp_cusdk__GetMapImageUploadUrl;
	cusdk__GetMapImageUploadUrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetMapImageUploadUrl(soap, &soap_tmp_cusdk__GetMapImageUploadUrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetMapImageUploadUrl(soap, &soap_tmp_cusdk__GetMapImageUploadUrl, "cusdk:GetMapImageUploadUrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMapImageUploadUrl(soap_tmp_cusdk__GetMapImageUploadUrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetMapImageUploadUrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetMapImageUploadUrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateMap(cusdkService *soap)
{	struct cusdk__CreateMap soap_tmp_cusdk__CreateMap;
	cusdk__CreateMapRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateMap(soap, &soap_tmp_cusdk__CreateMap);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateMap(soap, &soap_tmp_cusdk__CreateMap, "cusdk:CreateMap", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateMap(soap_tmp_cusdk__CreateMap.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateMapRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateMapRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyMap(cusdkService *soap)
{	struct cusdk__ModifyMap soap_tmp_cusdk__ModifyMap;
	cusdk__ModifyMapRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyMap(soap, &soap_tmp_cusdk__ModifyMap);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyMap(soap, &soap_tmp_cusdk__ModifyMap, "cusdk:ModifyMap", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyMap(soap_tmp_cusdk__ModifyMap.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyMapRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyMapRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelMap(cusdkService *soap)
{	struct cusdk__DelMap soap_tmp_cusdk__DelMap;
	cusdk__DelMapRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelMap(soap, &soap_tmp_cusdk__DelMap);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelMap(soap, &soap_tmp_cusdk__DelMap, "cusdk:DelMap", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelMap(soap_tmp_cusdk__DelMap.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelMapRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelMapRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryMap(cusdkService *soap)
{	struct cusdk__QueryMap soap_tmp_cusdk__QueryMap;
	cusdk__QueryMapRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryMap(soap, &soap_tmp_cusdk__QueryMap);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryMap(soap, &soap_tmp_cusdk__QueryMap, "cusdk:QueryMap", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryMap(soap_tmp_cusdk__QueryMap.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryMapRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryMapRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryMapArea(cusdkService *soap)
{	struct cusdk__QueryMapArea soap_tmp_cusdk__QueryMapArea;
	cusdk__QueryMapAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryMapArea(soap, &soap_tmp_cusdk__QueryMapArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryMapArea(soap, &soap_tmp_cusdk__QueryMapArea, "cusdk:QueryMapArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryMapArea(soap_tmp_cusdk__QueryMapArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryMapAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryMapAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateMapArea(cusdkService *soap)
{	struct cusdk__CreateMapArea soap_tmp_cusdk__CreateMapArea;
	cusdk__CreateMapAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateMapArea(soap, &soap_tmp_cusdk__CreateMapArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateMapArea(soap, &soap_tmp_cusdk__CreateMapArea, "cusdk:CreateMapArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateMapArea(soap_tmp_cusdk__CreateMapArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateMapAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateMapAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyMapArea(cusdkService *soap)
{	struct cusdk__ModifyMapArea soap_tmp_cusdk__ModifyMapArea;
	cusdk__ModifyMapAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyMapArea(soap, &soap_tmp_cusdk__ModifyMapArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyMapArea(soap, &soap_tmp_cusdk__ModifyMapArea, "cusdk:ModifyMapArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyMapArea(soap_tmp_cusdk__ModifyMapArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyMapAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyMapAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateMapElement(cusdkService *soap)
{	struct cusdk__CreateMapElement soap_tmp_cusdk__CreateMapElement;
	cusdk__CreateMapElementRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateMapElement(soap, &soap_tmp_cusdk__CreateMapElement);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateMapElement(soap, &soap_tmp_cusdk__CreateMapElement, "cusdk:CreateMapElement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateMapElement(soap_tmp_cusdk__CreateMapElement.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateMapElementRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateMapElementRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyMapElement(cusdkService *soap)
{	struct cusdk__ModifyMapElement soap_tmp_cusdk__ModifyMapElement;
	cusdk__ModifyMapElementRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyMapElement(soap, &soap_tmp_cusdk__ModifyMapElement);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyMapElement(soap, &soap_tmp_cusdk__ModifyMapElement, "cusdk:ModifyMapElement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyMapElement(soap_tmp_cusdk__ModifyMapElement.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyMapElementRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyMapElementRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelMapElement(cusdkService *soap)
{	struct cusdk__DelMapElement soap_tmp_cusdk__DelMapElement;
	cusdk__DelMapElementRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelMapElement(soap, &soap_tmp_cusdk__DelMapElement);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelMapElement(soap, &soap_tmp_cusdk__DelMapElement, "cusdk:DelMapElement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelMapElement(soap_tmp_cusdk__DelMapElement.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelMapElementRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelMapElementRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryMapElement(cusdkService *soap)
{	struct cusdk__QueryMapElement soap_tmp_cusdk__QueryMapElement;
	cusdk__QueryMapElementRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryMapElement(soap, &soap_tmp_cusdk__QueryMapElement);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryMapElement(soap, &soap_tmp_cusdk__QueryMapElement, "cusdk:QueryMapElement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryMapElement(soap_tmp_cusdk__QueryMapElement.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryMapElementRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryMapElementRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SearchMapElement(cusdkService *soap)
{	struct cusdk__SearchMapElement soap_tmp_cusdk__SearchMapElement;
	cusdk__SearchMapElementRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SearchMapElement(soap, &soap_tmp_cusdk__SearchMapElement);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SearchMapElement(soap, &soap_tmp_cusdk__SearchMapElement, "cusdk:SearchMapElement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SearchMapElement(soap_tmp_cusdk__SearchMapElement.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SearchMapElementRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SearchMapElementRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetMapElementImageUploadUrl(cusdkService *soap)
{	struct cusdk__GetMapElementImageUploadUrl soap_tmp_cusdk__GetMapElementImageUploadUrl;
	cusdk__GetMapElementImageUploadUrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetMapElementImageUploadUrl(soap, &soap_tmp_cusdk__GetMapElementImageUploadUrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetMapElementImageUploadUrl(soap, &soap_tmp_cusdk__GetMapElementImageUploadUrl, "cusdk:GetMapElementImageUploadUrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMapElementImageUploadUrl(soap_tmp_cusdk__GetMapElementImageUploadUrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetMapElementImageUploadUrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetMapElementImageUploadUrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryMapElementImageList(cusdkService *soap)
{	struct cusdk__QueryMapElementImageList soap_tmp_cusdk__QueryMapElementImageList;
	cusdk__QueryMapElementImageListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryMapElementImageList(soap, &soap_tmp_cusdk__QueryMapElementImageList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryMapElementImageList(soap, &soap_tmp_cusdk__QueryMapElementImageList, "cusdk:QueryMapElementImageList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryMapElementImageList(soap_tmp_cusdk__QueryMapElementImageList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryMapElementImageListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryMapElementImageListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__MapPositionMar2Earth(cusdkService *soap)
{	struct cusdk__MapPositionMar2Earth soap_tmp_cusdk__MapPositionMar2Earth;
	cusdk__MapPositionMar2EarthRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__MapPositionMar2Earth(soap, &soap_tmp_cusdk__MapPositionMar2Earth);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__MapPositionMar2Earth(soap, &soap_tmp_cusdk__MapPositionMar2Earth, "cusdk:MapPositionMar2Earth", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->MapPositionMar2Earth(soap_tmp_cusdk__MapPositionMar2Earth.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:MapPositionMar2EarthRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:MapPositionMar2EarthRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__MapPositionEarth2Mar(cusdkService *soap)
{	struct cusdk__MapPositionEarth2Mar soap_tmp_cusdk__MapPositionEarth2Mar;
	cusdk__MapPositionEarth2MarRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__MapPositionEarth2Mar(soap, &soap_tmp_cusdk__MapPositionEarth2Mar);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__MapPositionEarth2Mar(soap, &soap_tmp_cusdk__MapPositionEarth2Mar, "cusdk:MapPositionEarth2Mar", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->MapPositionEarth2Mar(soap_tmp_cusdk__MapPositionEarth2Mar.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:MapPositionEarth2MarRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:MapPositionEarth2MarRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetEMapDataVersion(cusdkService *soap)
{	struct cusdk__GetEMapDataVersion soap_tmp_cusdk__GetEMapDataVersion;
	cusdk__GetEMapDataVersionRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetEMapDataVersion(soap, &soap_tmp_cusdk__GetEMapDataVersion);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetEMapDataVersion(soap, &soap_tmp_cusdk__GetEMapDataVersion, "cusdk:GetEMapDataVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetEMapDataVersion(soap_tmp_cusdk__GetEMapDataVersion.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetEMapDataVersionRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetEMapDataVersionRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetAlarmLinkDataVersion(cusdkService *soap)
{	struct cusdk__GetAlarmLinkDataVersion soap_tmp_cusdk__GetAlarmLinkDataVersion;
	cusdk__GetAlarmLinkDataVersionRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetAlarmLinkDataVersion(soap, &soap_tmp_cusdk__GetAlarmLinkDataVersion);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetAlarmLinkDataVersion(soap, &soap_tmp_cusdk__GetAlarmLinkDataVersion, "cusdk:GetAlarmLinkDataVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAlarmLinkDataVersion(soap_tmp_cusdk__GetAlarmLinkDataVersion.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetAlarmLinkDataVersionRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetAlarmLinkDataVersionRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryAlarmLinkConfig(cusdkService *soap)
{	struct cusdk__QueryAlarmLinkConfig soap_tmp_cusdk__QueryAlarmLinkConfig;
	cusdk__QueryAlarmLinkConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryAlarmLinkConfig(soap, &soap_tmp_cusdk__QueryAlarmLinkConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryAlarmLinkConfig(soap, &soap_tmp_cusdk__QueryAlarmLinkConfig, "cusdk:QueryAlarmLinkConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryAlarmLinkConfig(soap_tmp_cusdk__QueryAlarmLinkConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryAlarmLinkConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryAlarmLinkConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetAlarmLinkConfig(cusdkService *soap)
{	struct cusdk__GetAlarmLinkConfig soap_tmp_cusdk__GetAlarmLinkConfig;
	cusdk__GetAlarmLinkConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetAlarmLinkConfig(soap, &soap_tmp_cusdk__GetAlarmLinkConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetAlarmLinkConfig(soap, &soap_tmp_cusdk__GetAlarmLinkConfig, "cusdk:GetAlarmLinkConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAlarmLinkConfig(soap_tmp_cusdk__GetAlarmLinkConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetAlarmLinkConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetAlarmLinkConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetAlarmLinkConfig(cusdkService *soap)
{	struct cusdk__SetAlarmLinkConfig soap_tmp_cusdk__SetAlarmLinkConfig;
	cusdk__SetAlarmLinkConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetAlarmLinkConfig(soap, &soap_tmp_cusdk__SetAlarmLinkConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetAlarmLinkConfig(soap, &soap_tmp_cusdk__SetAlarmLinkConfig, "cusdk:SetAlarmLinkConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetAlarmLinkConfig(soap_tmp_cusdk__SetAlarmLinkConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetAlarmLinkConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetAlarmLinkConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryAlarmLinkArea(cusdkService *soap)
{	struct cusdk__QueryAlarmLinkArea soap_tmp_cusdk__QueryAlarmLinkArea;
	cusdk__QueryAlarmLinkAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryAlarmLinkArea(soap, &soap_tmp_cusdk__QueryAlarmLinkArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryAlarmLinkArea(soap, &soap_tmp_cusdk__QueryAlarmLinkArea, "cusdk:QueryAlarmLinkArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryAlarmLinkArea(soap_tmp_cusdk__QueryAlarmLinkArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryAlarmLinkAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryAlarmLinkAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateAlarmLinkArea(cusdkService *soap)
{	struct cusdk__CreateAlarmLinkArea soap_tmp_cusdk__CreateAlarmLinkArea;
	cusdk__CreateAlarmLinkAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateAlarmLinkArea(soap, &soap_tmp_cusdk__CreateAlarmLinkArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateAlarmLinkArea(soap, &soap_tmp_cusdk__CreateAlarmLinkArea, "cusdk:CreateAlarmLinkArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateAlarmLinkArea(soap_tmp_cusdk__CreateAlarmLinkArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateAlarmLinkAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateAlarmLinkAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelAlarmLinkArea(cusdkService *soap)
{	struct cusdk__DelAlarmLinkArea soap_tmp_cusdk__DelAlarmLinkArea;
	cusdk__DelAlarmLinkAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelAlarmLinkArea(soap, &soap_tmp_cusdk__DelAlarmLinkArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelAlarmLinkArea(soap, &soap_tmp_cusdk__DelAlarmLinkArea, "cusdk:DelAlarmLinkArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelAlarmLinkArea(soap_tmp_cusdk__DelAlarmLinkArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelAlarmLinkAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelAlarmLinkAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyAlarmLinkArea(cusdkService *soap)
{	struct cusdk__ModifyAlarmLinkArea soap_tmp_cusdk__ModifyAlarmLinkArea;
	cusdk__ModifyAlarmLinkAreaRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyAlarmLinkArea(soap, &soap_tmp_cusdk__ModifyAlarmLinkArea);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyAlarmLinkArea(soap, &soap_tmp_cusdk__ModifyAlarmLinkArea, "cusdk:ModifyAlarmLinkArea", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyAlarmLinkArea(soap_tmp_cusdk__ModifyAlarmLinkArea.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyAlarmLinkAreaRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyAlarmLinkAreaRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryUserLog(cusdkService *soap)
{	struct cusdk__QueryUserLog soap_tmp_cusdk__QueryUserLog;
	cusdk__QueryUserLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryUserLog(soap, &soap_tmp_cusdk__QueryUserLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryUserLog(soap, &soap_tmp_cusdk__QueryUserLog, "cusdk:QueryUserLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryUserLog(soap_tmp_cusdk__QueryUserLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryUserLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryUserLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartExportUserLog(cusdkService *soap)
{	struct cusdk__StartExportUserLog soap_tmp_cusdk__StartExportUserLog;
	cusdk__StartExportUserLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartExportUserLog(soap, &soap_tmp_cusdk__StartExportUserLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartExportUserLog(soap, &soap_tmp_cusdk__StartExportUserLog, "cusdk:StartExportUserLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartExportUserLog(soap_tmp_cusdk__StartExportUserLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartExportUserLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartExportUserLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetExportUserLogProcess(cusdkService *soap)
{	struct cusdk__GetExportUserLogProcess soap_tmp_cusdk__GetExportUserLogProcess;
	cusdk__GetExportUserLogProcessRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetExportUserLogProcess(soap, &soap_tmp_cusdk__GetExportUserLogProcess);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetExportUserLogProcess(soap, &soap_tmp_cusdk__GetExportUserLogProcess, "cusdk:GetExportUserLogProcess", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetExportUserLogProcess(soap_tmp_cusdk__GetExportUserLogProcess.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetExportUserLogProcessRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetExportUserLogProcessRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopExportUserLog(cusdkService *soap)
{	struct cusdk__StopExportUserLog soap_tmp_cusdk__StopExportUserLog;
	cusdk__StopExportUserLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopExportUserLog(soap, &soap_tmp_cusdk__StopExportUserLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopExportUserLog(soap, &soap_tmp_cusdk__StopExportUserLog, "cusdk:StopExportUserLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopExportUserLog(soap_tmp_cusdk__StopExportUserLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopExportUserLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopExportUserLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryDeviceLog(cusdkService *soap)
{	struct cusdk__QueryDeviceLog soap_tmp_cusdk__QueryDeviceLog;
	cusdk__QueryDeviceLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryDeviceLog(soap, &soap_tmp_cusdk__QueryDeviceLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryDeviceLog(soap, &soap_tmp_cusdk__QueryDeviceLog, "cusdk:QueryDeviceLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryDeviceLog(soap_tmp_cusdk__QueryDeviceLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryDeviceLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryDeviceLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartExportDeviceLog(cusdkService *soap)
{	struct cusdk__StartExportDeviceLog soap_tmp_cusdk__StartExportDeviceLog;
	cusdk__StartExportDeviceLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartExportDeviceLog(soap, &soap_tmp_cusdk__StartExportDeviceLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartExportDeviceLog(soap, &soap_tmp_cusdk__StartExportDeviceLog, "cusdk:StartExportDeviceLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartExportDeviceLog(soap_tmp_cusdk__StartExportDeviceLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartExportDeviceLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartExportDeviceLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetExportDeviceLogProcess(cusdkService *soap)
{	struct cusdk__GetExportDeviceLogProcess soap_tmp_cusdk__GetExportDeviceLogProcess;
	cusdk__GetExportDeviceLogProcessRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetExportDeviceLogProcess(soap, &soap_tmp_cusdk__GetExportDeviceLogProcess);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetExportDeviceLogProcess(soap, &soap_tmp_cusdk__GetExportDeviceLogProcess, "cusdk:GetExportDeviceLogProcess", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetExportDeviceLogProcess(soap_tmp_cusdk__GetExportDeviceLogProcess.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetExportDeviceLogProcessRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetExportDeviceLogProcessRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopExportDeviceLog(cusdkService *soap)
{	struct cusdk__StopExportDeviceLog soap_tmp_cusdk__StopExportDeviceLog;
	cusdk__StopExportDeviceLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopExportDeviceLog(soap, &soap_tmp_cusdk__StopExportDeviceLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopExportDeviceLog(soap, &soap_tmp_cusdk__StopExportDeviceLog, "cusdk:StopExportDeviceLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopExportDeviceLog(soap_tmp_cusdk__StopExportDeviceLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopExportDeviceLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopExportDeviceLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryAlarmLog(cusdkService *soap)
{	struct cusdk__QueryAlarmLog soap_tmp_cusdk__QueryAlarmLog;
	cusdk__QueryAlarmLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryAlarmLog(soap, &soap_tmp_cusdk__QueryAlarmLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryAlarmLog(soap, &soap_tmp_cusdk__QueryAlarmLog, "cusdk:QueryAlarmLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryAlarmLog(soap_tmp_cusdk__QueryAlarmLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryAlarmLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryAlarmLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartExportAlarmLog(cusdkService *soap)
{	struct cusdk__StartExportAlarmLog soap_tmp_cusdk__StartExportAlarmLog;
	cusdk__StartExportAlarmLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartExportAlarmLog(soap, &soap_tmp_cusdk__StartExportAlarmLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartExportAlarmLog(soap, &soap_tmp_cusdk__StartExportAlarmLog, "cusdk:StartExportAlarmLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartExportAlarmLog(soap_tmp_cusdk__StartExportAlarmLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartExportAlarmLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartExportAlarmLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetExportAlarmLogProcess(cusdkService *soap)
{	struct cusdk__GetExportAlarmLogProcess soap_tmp_cusdk__GetExportAlarmLogProcess;
	cusdk__GetExportAlarmLogProcessRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetExportAlarmLogProcess(soap, &soap_tmp_cusdk__GetExportAlarmLogProcess);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetExportAlarmLogProcess(soap, &soap_tmp_cusdk__GetExportAlarmLogProcess, "cusdk:GetExportAlarmLogProcess", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetExportAlarmLogProcess(soap_tmp_cusdk__GetExportAlarmLogProcess.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetExportAlarmLogProcessRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetExportAlarmLogProcessRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StopExportAlarmLog(cusdkService *soap)
{	struct cusdk__StopExportAlarmLog soap_tmp_cusdk__StopExportAlarmLog;
	cusdk__StopExportAlarmLogRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StopExportAlarmLog(soap, &soap_tmp_cusdk__StopExportAlarmLog);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StopExportAlarmLog(soap, &soap_tmp_cusdk__StopExportAlarmLog, "cusdk:StopExportAlarmLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StopExportAlarmLog(soap_tmp_cusdk__StopExportAlarmLog.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StopExportAlarmLogRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StopExportAlarmLogRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetLogConfig(cusdkService *soap)
{	struct cusdk__GetLogConfig soap_tmp_cusdk__GetLogConfig;
	cusdk__GetLogConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetLogConfig(soap, &soap_tmp_cusdk__GetLogConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetLogConfig(soap, &soap_tmp_cusdk__GetLogConfig, "cusdk:GetLogConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetLogConfig(soap_tmp_cusdk__GetLogConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetLogConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetLogConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetLogConfig(cusdkService *soap)
{	struct cusdk__SetLogConfig soap_tmp_cusdk__SetLogConfig;
	cusdk__SetLogConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetLogConfig(soap, &soap_tmp_cusdk__SetLogConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetLogConfig(soap, &soap_tmp_cusdk__SetLogConfig, "cusdk:SetLogConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetLogConfig(soap_tmp_cusdk__SetLogConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetLogConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetLogConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CallPu(cusdkService *soap)
{	struct cusdk__CallPu soap_tmp_cusdk__CallPu;
	cusdk__CallPuRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CallPu(soap, &soap_tmp_cusdk__CallPu);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CallPu(soap, &soap_tmp_cusdk__CallPu, "cusdk:CallPu", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CallPu(soap_tmp_cusdk__CallPu.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CallPuRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CallPuRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__HangUpPu(cusdkService *soap)
{	struct cusdk__HangUpPu soap_tmp_cusdk__HangUpPu;
	cusdk__HangUpPuRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__HangUpPu(soap, &soap_tmp_cusdk__HangUpPu);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__HangUpPu(soap, &soap_tmp_cusdk__HangUpPu, "cusdk:HangUpPu", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->HangUpPu(soap_tmp_cusdk__HangUpPu.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:HangUpPuRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:HangUpPuRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceEncoderParam(cusdkService *soap)
{	struct cusdk__GetDeviceEncoderParam soap_tmp_cusdk__GetDeviceEncoderParam;
	cusdk__GetDeviceEncoderParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceEncoderParam(soap, &soap_tmp_cusdk__GetDeviceEncoderParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceEncoderParam(soap, &soap_tmp_cusdk__GetDeviceEncoderParam, "cusdk:GetDeviceEncoderParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceEncoderParam(soap_tmp_cusdk__GetDeviceEncoderParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceEncoderParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceEncoderParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceAudioEncoderParam(cusdkService *soap)
{	struct cusdk__GetDeviceAudioEncoderParam soap_tmp_cusdk__GetDeviceAudioEncoderParam;
	cusdk__GetDeviceAudioEncoderParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceAudioEncoderParam(soap, &soap_tmp_cusdk__GetDeviceAudioEncoderParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceAudioEncoderParam(soap, &soap_tmp_cusdk__GetDeviceAudioEncoderParam, "cusdk:GetDeviceAudioEncoderParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceAudioEncoderParam(soap_tmp_cusdk__GetDeviceAudioEncoderParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceAudioEncoderParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceAudioEncoderParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetDeviceEncoderParam(cusdkService *soap)
{	struct cusdk__SetDeviceEncoderParam soap_tmp_cusdk__SetDeviceEncoderParam;
	cusdk__SetDeviceEncoderParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetDeviceEncoderParam(soap, &soap_tmp_cusdk__SetDeviceEncoderParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetDeviceEncoderParam(soap, &soap_tmp_cusdk__SetDeviceEncoderParam, "cusdk:SetDeviceEncoderParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetDeviceEncoderParam(soap_tmp_cusdk__SetDeviceEncoderParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetDeviceEncoderParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetDeviceEncoderParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetPuVidSrcOSD(cusdkService *soap)
{	struct cusdk__SetPuVidSrcOSD soap_tmp_cusdk__SetPuVidSrcOSD;
	cusdk__SetPuVidSrcOSDRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetPuVidSrcOSD(soap, &soap_tmp_cusdk__SetPuVidSrcOSD);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetPuVidSrcOSD(soap, &soap_tmp_cusdk__SetPuVidSrcOSD, "cusdk:SetPuVidSrcOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetPuVidSrcOSD(soap_tmp_cusdk__SetPuVidSrcOSD.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetPuVidSrcOSDRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetPuVidSrcOSDRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetPuVidSrcOSD(cusdkService *soap)
{	struct cusdk__GetPuVidSrcOSD soap_tmp_cusdk__GetPuVidSrcOSD;
	cusdk__GetPuVidSrcOSDRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetPuVidSrcOSD(soap, &soap_tmp_cusdk__GetPuVidSrcOSD);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetPuVidSrcOSD(soap, &soap_tmp_cusdk__GetPuVidSrcOSD, "cusdk:GetPuVidSrcOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetPuVidSrcOSD(soap_tmp_cusdk__GetPuVidSrcOSD.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetPuVidSrcOSDRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetPuVidSrcOSDRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetDeviceName(cusdkService *soap)
{	struct cusdk__SetDeviceName soap_tmp_cusdk__SetDeviceName;
	cusdk__SetDeviceNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetDeviceName(soap, &soap_tmp_cusdk__SetDeviceName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetDeviceName(soap, &soap_tmp_cusdk__SetDeviceName, "cusdk:SetDeviceName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetDeviceName(soap_tmp_cusdk__SetDeviceName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetDeviceNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetDeviceNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCameraProtocolType(cusdkService *soap)
{	struct cusdk__GetCameraProtocolType soap_tmp_cusdk__GetCameraProtocolType;
	cusdk__GetCameraProtocolTypeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCameraProtocolType(soap, &soap_tmp_cusdk__GetCameraProtocolType);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCameraProtocolType(soap, &soap_tmp_cusdk__GetCameraProtocolType, "cusdk:GetCameraProtocolType", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCameraProtocolType(soap_tmp_cusdk__GetCameraProtocolType.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCameraProtocolTypeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCameraProtocolTypeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetCameraProtocolType(cusdkService *soap)
{	struct cusdk__SetCameraProtocolType soap_tmp_cusdk__SetCameraProtocolType;
	cusdk__SetCameraProtocolTypeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetCameraProtocolType(soap, &soap_tmp_cusdk__SetCameraProtocolType);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetCameraProtocolType(soap, &soap_tmp_cusdk__SetCameraProtocolType, "cusdk:SetCameraProtocolType", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetCameraProtocolType(soap_tmp_cusdk__SetCameraProtocolType.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetCameraProtocolTypeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetCameraProtocolTypeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetMotionDetectConfig(cusdkService *soap)
{	struct cusdk__GetMotionDetectConfig soap_tmp_cusdk__GetMotionDetectConfig;
	cusdk__GetMotionDetectConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetMotionDetectConfig(soap, &soap_tmp_cusdk__GetMotionDetectConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetMotionDetectConfig(soap, &soap_tmp_cusdk__GetMotionDetectConfig, "cusdk:GetMotionDetectConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMotionDetectConfig(soap_tmp_cusdk__GetMotionDetectConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetMotionDetectConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetMotionDetectConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetMotionDetectConfig(cusdkService *soap)
{	struct cusdk__SetMotionDetectConfig soap_tmp_cusdk__SetMotionDetectConfig;
	cusdk__SetMotionDetectConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetMotionDetectConfig(soap, &soap_tmp_cusdk__SetMotionDetectConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetMotionDetectConfig(soap, &soap_tmp_cusdk__SetMotionDetectConfig, "cusdk:SetMotionDetectConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetMotionDetectConfig(soap_tmp_cusdk__SetMotionDetectConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetMotionDetectConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetMotionDetectConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetShadeConfig(cusdkService *soap)
{	struct cusdk__GetShadeConfig soap_tmp_cusdk__GetShadeConfig;
	cusdk__GetShadeConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetShadeConfig(soap, &soap_tmp_cusdk__GetShadeConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetShadeConfig(soap, &soap_tmp_cusdk__GetShadeConfig, "cusdk:GetShadeConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetShadeConfig(soap_tmp_cusdk__GetShadeConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetShadeConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetShadeConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetShadeConfig(cusdkService *soap)
{	struct cusdk__SetShadeConfig soap_tmp_cusdk__SetShadeConfig;
	cusdk__SetShadeConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetShadeConfig(soap, &soap_tmp_cusdk__SetShadeConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetShadeConfig(soap, &soap_tmp_cusdk__SetShadeConfig, "cusdk:SetShadeConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetShadeConfig(soap_tmp_cusdk__SetShadeConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetShadeConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetShadeConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceChannelName(cusdkService *soap)
{	struct cusdk__GetDeviceChannelName soap_tmp_cusdk__GetDeviceChannelName;
	cusdk__GetDeviceChannelNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceChannelName(soap, &soap_tmp_cusdk__GetDeviceChannelName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceChannelName(soap, &soap_tmp_cusdk__GetDeviceChannelName, "cusdk:GetDeviceChannelName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceChannelName(soap_tmp_cusdk__GetDeviceChannelName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceChannelNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceChannelNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetDeviceChannelName(cusdkService *soap)
{	struct cusdk__SetDeviceChannelName soap_tmp_cusdk__SetDeviceChannelName;
	cusdk__SetDeviceChannelNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetDeviceChannelName(soap, &soap_tmp_cusdk__SetDeviceChannelName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetDeviceChannelName(soap, &soap_tmp_cusdk__SetDeviceChannelName, "cusdk:SetDeviceChannelName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetDeviceChannelName(soap_tmp_cusdk__SetDeviceChannelName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetDeviceChannelNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetDeviceChannelNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetSyncVideoSrcNameEnable(cusdkService *soap)
{	struct cusdk__GetSyncVideoSrcNameEnable soap_tmp_cusdk__GetSyncVideoSrcNameEnable;
	cusdk__GetSyncVideoSrcNameEnableRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetSyncVideoSrcNameEnable(soap, &soap_tmp_cusdk__GetSyncVideoSrcNameEnable);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetSyncVideoSrcNameEnable(soap, &soap_tmp_cusdk__GetSyncVideoSrcNameEnable, "cusdk:GetSyncVideoSrcNameEnable", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSyncVideoSrcNameEnable(soap_tmp_cusdk__GetSyncVideoSrcNameEnable.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetSyncVideoSrcNameEnableRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetSyncVideoSrcNameEnableRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetSyncVideoSrcNameEnable(cusdkService *soap)
{	struct cusdk__SetSyncVideoSrcNameEnable soap_tmp_cusdk__SetSyncVideoSrcNameEnable;
	cusdk__SetSyncVideoSrcNameEnableRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetSyncVideoSrcNameEnable(soap, &soap_tmp_cusdk__SetSyncVideoSrcNameEnable);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetSyncVideoSrcNameEnable(soap, &soap_tmp_cusdk__SetSyncVideoSrcNameEnable, "cusdk:SetSyncVideoSrcNameEnable", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetSyncVideoSrcNameEnable(soap_tmp_cusdk__SetSyncVideoSrcNameEnable.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetSyncVideoSrcNameEnableRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetSyncVideoSrcNameEnableRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetPtzPresetName(cusdkService *soap)
{	struct cusdk__GetPtzPresetName soap_tmp_cusdk__GetPtzPresetName;
	cusdk__GetPtzPresetNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetPtzPresetName(soap, &soap_tmp_cusdk__GetPtzPresetName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetPtzPresetName(soap, &soap_tmp_cusdk__GetPtzPresetName, "cusdk:GetPtzPresetName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetPtzPresetName(soap_tmp_cusdk__GetPtzPresetName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetPtzPresetNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetPtzPresetNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetPtzPresetName(cusdkService *soap)
{	struct cusdk__SetPtzPresetName soap_tmp_cusdk__SetPtzPresetName;
	cusdk__SetPtzPresetNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetPtzPresetName(soap, &soap_tmp_cusdk__SetPtzPresetName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetPtzPresetName(soap, &soap_tmp_cusdk__SetPtzPresetName, "cusdk:SetPtzPresetName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetPtzPresetName(soap_tmp_cusdk__SetPtzPresetName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetPtzPresetNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetPtzPresetNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DelPtzPresetName(cusdkService *soap)
{	struct cusdk__DelPtzPresetName soap_tmp_cusdk__DelPtzPresetName;
	cusdk__DelPtzPresetNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DelPtzPresetName(soap, &soap_tmp_cusdk__DelPtzPresetName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DelPtzPresetName(soap, &soap_tmp_cusdk__DelPtzPresetName, "cusdk:DelPtzPresetName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DelPtzPresetName(soap_tmp_cusdk__DelPtzPresetName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DelPtzPresetNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DelPtzPresetNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__VsipChannelData(cusdkService *soap)
{	struct cusdk__VsipChannelData soap_tmp_cusdk__VsipChannelData;
	cusdk__VsipChannelDataRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__VsipChannelData(soap, &soap_tmp_cusdk__VsipChannelData);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__VsipChannelData(soap, &soap_tmp_cusdk__VsipChannelData, "cusdk:VsipChannelData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->VsipChannelData(soap_tmp_cusdk__VsipChannelData.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:VsipChannelDataRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:VsipChannelDataRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetTransDataParam(cusdkService *soap)
{	struct cusdk__SetTransDataParam soap_tmp_cusdk__SetTransDataParam;
	cusdk__SetTransDataParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetTransDataParam(soap, &soap_tmp_cusdk__SetTransDataParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetTransDataParam(soap, &soap_tmp_cusdk__SetTransDataParam, "cusdk:SetTransDataParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetTransDataParam(soap_tmp_cusdk__SetTransDataParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetTransDataParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetTransDataParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetTransDataParam(cusdkService *soap)
{	struct cusdk__GetTransDataParam soap_tmp_cusdk__GetTransDataParam;
	cusdk__GetTransDataParamRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetTransDataParam(soap, &soap_tmp_cusdk__GetTransDataParam);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetTransDataParam(soap, &soap_tmp_cusdk__GetTransDataParam, "cusdk:GetTransDataParam", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetTransDataParam(soap_tmp_cusdk__GetTransDataParam.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetTransDataParamRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetTransDataParamRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryGPSTrace(cusdkService *soap)
{	struct cusdk__QueryGPSTrace soap_tmp_cusdk__QueryGPSTrace;
	cusdk__QueryGPSTraceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryGPSTrace(soap, &soap_tmp_cusdk__QueryGPSTrace);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryGPSTrace(soap, &soap_tmp_cusdk__QueryGPSTrace, "cusdk:QueryGPSTrace", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryGPSTrace(soap_tmp_cusdk__QueryGPSTrace.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryGPSTraceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryGPSTraceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetMapConfig(cusdkService *soap)
{	struct cusdk__GetMapConfig soap_tmp_cusdk__GetMapConfig;
	cusdk__GetMapConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetMapConfig(soap, &soap_tmp_cusdk__GetMapConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetMapConfig(soap, &soap_tmp_cusdk__GetMapConfig, "cusdk:GetMapConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetMapConfig(soap_tmp_cusdk__GetMapConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetMapConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetMapConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetMapConfig(cusdkService *soap)
{	struct cusdk__SetMapConfig soap_tmp_cusdk__SetMapConfig;
	cusdk__SetMapConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetMapConfig(soap, &soap_tmp_cusdk__SetMapConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetMapConfig(soap, &soap_tmp_cusdk__SetMapConfig, "cusdk:SetMapConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetMapConfig(soap_tmp_cusdk__SetMapConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetMapConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetMapConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceSerialConfig(cusdkService *soap)
{	struct cusdk__GetDeviceSerialConfig soap_tmp_cusdk__GetDeviceSerialConfig;
	cusdk__GetDeviceSerialConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceSerialConfig(soap, &soap_tmp_cusdk__GetDeviceSerialConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceSerialConfig(soap, &soap_tmp_cusdk__GetDeviceSerialConfig, "cusdk:GetDeviceSerialConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceSerialConfig(soap_tmp_cusdk__GetDeviceSerialConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceSerialConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceSerialConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetDeviceSerialConfig(cusdkService *soap)
{	struct cusdk__SetDeviceSerialConfig soap_tmp_cusdk__SetDeviceSerialConfig;
	cusdk__SetDeviceSerialConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetDeviceSerialConfig(soap, &soap_tmp_cusdk__SetDeviceSerialConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetDeviceSerialConfig(soap, &soap_tmp_cusdk__SetDeviceSerialConfig, "cusdk:SetDeviceSerialConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetDeviceSerialConfig(soap_tmp_cusdk__SetDeviceSerialConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetDeviceSerialConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetDeviceSerialConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceGBID(cusdkService *soap)
{	struct cusdk__GetDeviceGBID soap_tmp_cusdk__GetDeviceGBID;
	cusdk__GetDeviceGBIDRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceGBID(soap, &soap_tmp_cusdk__GetDeviceGBID);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceGBID(soap, &soap_tmp_cusdk__GetDeviceGBID, "cusdk:GetDeviceGBID", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceGBID(soap_tmp_cusdk__GetDeviceGBID.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceGBIDRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceGBIDRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCivilcode(cusdkService *soap)
{	struct cusdk__GetCivilcode soap_tmp_cusdk__GetCivilcode;
	cusdk__GetCivilcodeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCivilcode(soap, &soap_tmp_cusdk__GetCivilcode);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCivilcode(soap, &soap_tmp_cusdk__GetCivilcode, "cusdk:GetCivilcode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCivilcode(soap_tmp_cusdk__GetCivilcode.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCivilcodeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCivilcodeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceChnByGBID(cusdkService *soap)
{	struct cusdk__GetDeviceChnByGBID soap_tmp_cusdk__GetDeviceChnByGBID;
	cusdk__GetDeviceChnByGBIDRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceChnByGBID(soap, &soap_tmp_cusdk__GetDeviceChnByGBID);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceChnByGBID(soap, &soap_tmp_cusdk__GetDeviceChnByGBID, "cusdk:GetDeviceChnByGBID", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceChnByGBID(soap_tmp_cusdk__GetDeviceChnByGBID.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceChnByGBIDRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceChnByGBIDRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCAPSConfig(cusdkService *soap)
{	struct cusdk__GetCAPSConfig soap_tmp_cusdk__GetCAPSConfig;
	cusdk__GetCAPSConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCAPSConfig(soap, &soap_tmp_cusdk__GetCAPSConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCAPSConfig(soap, &soap_tmp_cusdk__GetCAPSConfig, "cusdk:GetCAPSConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCAPSConfig(soap_tmp_cusdk__GetCAPSConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCAPSConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCAPSConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetCAPSConfig(cusdkService *soap)
{	struct cusdk__SetCAPSConfig soap_tmp_cusdk__SetCAPSConfig;
	cusdk__SetCAPSConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetCAPSConfig(soap, &soap_tmp_cusdk__SetCAPSConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetCAPSConfig(soap, &soap_tmp_cusdk__SetCAPSConfig, "cusdk:SetCAPSConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetCAPSConfig(soap_tmp_cusdk__SetCAPSConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetCAPSConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetCAPSConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryCAPSDeviceList(cusdkService *soap)
{	struct cusdk__QueryCAPSDeviceList soap_tmp_cusdk__QueryCAPSDeviceList;
	cusdk__QueryCAPSDeviceListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryCAPSDeviceList(soap, &soap_tmp_cusdk__QueryCAPSDeviceList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryCAPSDeviceList(soap, &soap_tmp_cusdk__QueryCAPSDeviceList, "cusdk:QueryCAPSDeviceList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryCAPSDeviceList(soap_tmp_cusdk__QueryCAPSDeviceList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryCAPSDeviceListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryCAPSDeviceListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CAPSAddDevice(cusdkService *soap)
{	struct cusdk__CAPSAddDevice soap_tmp_cusdk__CAPSAddDevice;
	cusdk__CAPSAddDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CAPSAddDevice(soap, &soap_tmp_cusdk__CAPSAddDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CAPSAddDevice(soap, &soap_tmp_cusdk__CAPSAddDevice, "cusdk:CAPSAddDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CAPSAddDevice(soap_tmp_cusdk__CAPSAddDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CAPSAddDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CAPSAddDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CAPSModifyDevice(cusdkService *soap)
{	struct cusdk__CAPSModifyDevice soap_tmp_cusdk__CAPSModifyDevice;
	cusdk__CAPSModifyDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CAPSModifyDevice(soap, &soap_tmp_cusdk__CAPSModifyDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CAPSModifyDevice(soap, &soap_tmp_cusdk__CAPSModifyDevice, "cusdk:CAPSModifyDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CAPSModifyDevice(soap_tmp_cusdk__CAPSModifyDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CAPSModifyDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CAPSModifyDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CAPSDelDevice(cusdkService *soap)
{	struct cusdk__CAPSDelDevice soap_tmp_cusdk__CAPSDelDevice;
	cusdk__CAPSDelDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CAPSDelDevice(soap, &soap_tmp_cusdk__CAPSDelDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CAPSDelDevice(soap, &soap_tmp_cusdk__CAPSDelDevice, "cusdk:CAPSDelDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CAPSDelDevice(soap_tmp_cusdk__CAPSDelDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CAPSDelDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CAPSDelDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetOfflineDeviceStat(cusdkService *soap)
{	struct cusdk__GetOfflineDeviceStat soap_tmp_cusdk__GetOfflineDeviceStat;
	cusdk__GetOfflineDeviceStatRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetOfflineDeviceStat(soap, &soap_tmp_cusdk__GetOfflineDeviceStat);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetOfflineDeviceStat(soap, &soap_tmp_cusdk__GetOfflineDeviceStat, "cusdk:GetOfflineDeviceStat", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetOfflineDeviceStat(soap_tmp_cusdk__GetOfflineDeviceStat.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetOfflineDeviceStatRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetOfflineDeviceStatRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UpdateCUProperty(cusdkService *soap)
{	struct cusdk__UpdateCUProperty soap_tmp_cusdk__UpdateCUProperty;
	cusdk__UpdateCUPropertyRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UpdateCUProperty(soap, &soap_tmp_cusdk__UpdateCUProperty);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UpdateCUProperty(soap, &soap_tmp_cusdk__UpdateCUProperty, "cusdk:UpdateCUProperty", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UpdateCUProperty(soap_tmp_cusdk__UpdateCUProperty.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UpdateCUPropertyRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UpdateCUPropertyRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__RestartDevice(cusdkService *soap)
{	struct cusdk__RestartDevice soap_tmp_cusdk__RestartDevice;
	cusdk__RestartDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__RestartDevice(soap, &soap_tmp_cusdk__RestartDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__RestartDevice(soap, &soap_tmp_cusdk__RestartDevice, "cusdk:RestartDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->RestartDevice(soap_tmp_cusdk__RestartDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:RestartDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:RestartDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserAddDeviceGroup(cusdkService *soap)
{	struct cusdk__UserAddDeviceGroup soap_tmp_cusdk__UserAddDeviceGroup;
	cusdk__UserAddDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserAddDeviceGroup(soap, &soap_tmp_cusdk__UserAddDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserAddDeviceGroup(soap, &soap_tmp_cusdk__UserAddDeviceGroup, "cusdk:UserAddDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserAddDeviceGroup(soap_tmp_cusdk__UserAddDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserAddDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserAddDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserDelDeviceGroup(cusdkService *soap)
{	struct cusdk__UserDelDeviceGroup soap_tmp_cusdk__UserDelDeviceGroup;
	cusdk__UserDelDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserDelDeviceGroup(soap, &soap_tmp_cusdk__UserDelDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserDelDeviceGroup(soap, &soap_tmp_cusdk__UserDelDeviceGroup, "cusdk:UserDelDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserDelDeviceGroup(soap_tmp_cusdk__UserDelDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserDelDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserDelDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGroupAddDeviceGroup(cusdkService *soap)
{	struct cusdk__UserGroupAddDeviceGroup soap_tmp_cusdk__UserGroupAddDeviceGroup;
	cusdk__UserGroupAddDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGroupAddDeviceGroup(soap, &soap_tmp_cusdk__UserGroupAddDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGroupAddDeviceGroup(soap, &soap_tmp_cusdk__UserGroupAddDeviceGroup, "cusdk:UserGroupAddDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGroupAddDeviceGroup(soap_tmp_cusdk__UserGroupAddDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGroupAddDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGroupAddDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGroupDelDeviceGroup(cusdkService *soap)
{	struct cusdk__UserGroupDelDeviceGroup soap_tmp_cusdk__UserGroupDelDeviceGroup;
	cusdk__UserGroupDelDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGroupDelDeviceGroup(soap, &soap_tmp_cusdk__UserGroupDelDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGroupDelDeviceGroup(soap, &soap_tmp_cusdk__UserGroupDelDeviceGroup, "cusdk:UserGroupDelDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGroupDelDeviceGroup(soap_tmp_cusdk__UserGroupDelDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGroupDelDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGroupDelDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserSetAutoSyncDeviceGroup(cusdkService *soap)
{	struct cusdk__UserSetAutoSyncDeviceGroup soap_tmp_cusdk__UserSetAutoSyncDeviceGroup;
	cusdk__UserSetAutoSyncDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserSetAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserSetAutoSyncDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserSetAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserSetAutoSyncDeviceGroup, "cusdk:UserSetAutoSyncDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserSetAutoSyncDeviceGroup(soap_tmp_cusdk__UserSetAutoSyncDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserSetAutoSyncDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserSetAutoSyncDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGroupSetAutoSyncDeviceGroup(cusdkService *soap)
{	struct cusdk__UserGroupSetAutoSyncDeviceGroup soap_tmp_cusdk__UserGroupSetAutoSyncDeviceGroup;
	cusdk__UserGroupSetAutoSyncDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGroupSetAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserGroupSetAutoSyncDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGroupSetAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserGroupSetAutoSyncDeviceGroup, "cusdk:UserGroupSetAutoSyncDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGroupSetAutoSyncDeviceGroup(soap_tmp_cusdk__UserGroupSetAutoSyncDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGroupSetAutoSyncDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGroupSetAutoSyncDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryOperationProgress(cusdkService *soap)
{	struct cusdk__QueryOperationProgress soap_tmp_cusdk__QueryOperationProgress;
	cusdk__QueryOperationProgreeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryOperationProgress(soap, &soap_tmp_cusdk__QueryOperationProgress);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryOperationProgress(soap, &soap_tmp_cusdk__QueryOperationProgress, "cusdk:QueryOperationProgress", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryOperationProgress(soap_tmp_cusdk__QueryOperationProgress.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryOperationProgreeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryOperationProgreeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserQueryAutoSyncDeviceGroup(cusdkService *soap)
{	struct cusdk__UserQueryAutoSyncDeviceGroup soap_tmp_cusdk__UserQueryAutoSyncDeviceGroup;
	cusdk__UserQueryAutoSyncDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserQueryAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserQueryAutoSyncDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserQueryAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserQueryAutoSyncDeviceGroup, "cusdk:UserQueryAutoSyncDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserQueryAutoSyncDeviceGroup(soap_tmp_cusdk__UserQueryAutoSyncDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserQueryAutoSyncDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserQueryAutoSyncDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UserGroupQueryAutoSyncDeviceGroup(cusdkService *soap)
{	struct cusdk__UserGroupQueryAutoSyncDeviceGroup soap_tmp_cusdk__UserGroupQueryAutoSyncDeviceGroup;
	cusdk__UserGroupQueryAutoSyncDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UserGroupQueryAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserGroupQueryAutoSyncDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UserGroupQueryAutoSyncDeviceGroup(soap, &soap_tmp_cusdk__UserGroupQueryAutoSyncDeviceGroup, "cusdk:UserGroupQueryAutoSyncDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserGroupQueryAutoSyncDeviceGroup(soap_tmp_cusdk__UserGroupQueryAutoSyncDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UserGroupQueryAutoSyncDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UserGroupQueryAutoSyncDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetSuperGBDomainList(cusdkService *soap)
{	struct cusdk__GetSuperGBDomainList soap_tmp_cusdk__GetSuperGBDomainList;
	cusdk__GetGBDomainListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetSuperGBDomainList(soap, &soap_tmp_cusdk__GetSuperGBDomainList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetSuperGBDomainList(soap, &soap_tmp_cusdk__GetSuperGBDomainList, "cusdk:GetSuperGBDomainList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSuperGBDomainList(soap_tmp_cusdk__GetSuperGBDomainList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetGBDomainListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetGBDomainListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__PushDevice(cusdkService *soap)
{	struct cusdk__PushDevice soap_tmp_cusdk__PushDevice;
	cusdk__DevicePushRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__PushDevice(soap, &soap_tmp_cusdk__PushDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__PushDevice(soap, &soap_tmp_cusdk__PushDevice, "cusdk:PushDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->PushDevice(soap_tmp_cusdk__PushDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DevicePushRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DevicePushRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDataVersion(cusdkService *soap)
{	struct cusdk__GetDataVersion soap_tmp_cusdk__GetDataVersion;
	cusdk__GetDataVersionRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDataVersion(soap, &soap_tmp_cusdk__GetDataVersion);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDataVersion(soap, &soap_tmp_cusdk__GetDataVersion, "cusdk:GetDataVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDataVersion(soap_tmp_cusdk__GetDataVersion.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDataVersionRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDataVersionRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartDataFileExport(cusdkService *soap)
{	struct cusdk__StartDataFileExport soap_tmp_cusdk__StartDataFileExport;
	cusdk__StartDataFileExportRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartDataFileExport(soap, &soap_tmp_cusdk__StartDataFileExport);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartDataFileExport(soap, &soap_tmp_cusdk__StartDataFileExport, "cusdk:StartDataFileExport", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartDataFileExport(soap_tmp_cusdk__StartDataFileExport.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartDataFileExportRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartDataFileExportRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__EndDataFileExport(cusdkService *soap)
{	struct cusdk__EndDataFileExport soap_tmp_cusdk__EndDataFileExport;
	cusdk__EndDataFileExportRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__EndDataFileExport(soap, &soap_tmp_cusdk__EndDataFileExport);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__EndDataFileExport(soap, &soap_tmp_cusdk__EndDataFileExport, "cusdk:EndDataFileExport", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->EndDataFileExport(soap_tmp_cusdk__EndDataFileExport.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:EndDataFileExportRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:EndDataFileExportRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartDataFileImport(cusdkService *soap)
{	struct cusdk__StartDataFileImport soap_tmp_cusdk__StartDataFileImport;
	cusdk__StartDataFileImportRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartDataFileImport(soap, &soap_tmp_cusdk__StartDataFileImport);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartDataFileImport(soap, &soap_tmp_cusdk__StartDataFileImport, "cusdk:StartDataFileImport", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartDataFileImport(soap_tmp_cusdk__StartDataFileImport.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartDataFileImportRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartDataFileImportRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__EndDataFileImport(cusdkService *soap)
{	struct cusdk__EndDataFileImport soap_tmp_cusdk__EndDataFileImport;
	cusdk__EndDataFileImportRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__EndDataFileImport(soap, &soap_tmp_cusdk__EndDataFileImport);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__EndDataFileImport(soap, &soap_tmp_cusdk__EndDataFileImport, "cusdk:EndDataFileImport", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->EndDataFileImport(soap_tmp_cusdk__EndDataFileImport.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:EndDataFileImportRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:EndDataFileImportRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetOperationProgress(cusdkService *soap)
{	struct cusdk__GetOperationProgress soap_tmp_cusdk__GetOperationProgress;
	cusdk__GetOperationProgreeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetOperationProgress(soap, &soap_tmp_cusdk__GetOperationProgress);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetOperationProgress(soap, &soap_tmp_cusdk__GetOperationProgress, "cusdk:GetOperationProgress", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetOperationProgress(soap_tmp_cusdk__GetOperationProgress.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetOperationProgreeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetOperationProgreeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetChildrenGBDomainList(cusdkService *soap)
{	struct cusdk__GetChildrenGBDomainList soap_tmp_cusdk__GetChildrenGBDomainList;
	cusdk__GetChildrenGBDomainListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetChildrenGBDomainList(soap, &soap_tmp_cusdk__GetChildrenGBDomainList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetChildrenGBDomainList(soap, &soap_tmp_cusdk__GetChildrenGBDomainList, "cusdk:GetChildrenGBDomainList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetChildrenGBDomainList(soap_tmp_cusdk__GetChildrenGBDomainList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetChildrenGBDomainListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetChildrenGBDomainListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetGBDevciePushDomain(cusdkService *soap)
{	struct cusdk__GetGBDevciePushDomain soap_tmp_cusdk__GetGBDevciePushDomain;
	cusdk__GetGBDevicePushDomainRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetGBDevciePushDomain(soap, &soap_tmp_cusdk__GetGBDevciePushDomain);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetGBDevciePushDomain(soap, &soap_tmp_cusdk__GetGBDevciePushDomain, "cusdk:GetGBDevciePushDomain", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetGBDevciePushDomain(soap_tmp_cusdk__GetGBDevciePushDomain.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetGBDevicePushDomainRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetGBDevicePushDomainRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UpdateOperationProgress(cusdkService *soap)
{	struct cusdk__UpdateOperationProgress soap_tmp_cusdk__UpdateOperationProgress;
	cusdk__UpdateOperationProgreeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UpdateOperationProgress(soap, &soap_tmp_cusdk__UpdateOperationProgress);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UpdateOperationProgress(soap, &soap_tmp_cusdk__UpdateOperationProgress, "cusdk:UpdateOperationProgress", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UpdateOperationProgress(soap_tmp_cusdk__UpdateOperationProgress.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UpdateOperationProgreeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UpdateOperationProgreeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetResInfo(cusdkService *soap)
{	struct cusdk__GetResInfo soap_tmp_cusdk__GetResInfo;
	cusdk__ResInfoRsp cResInfoRsp;
	cResInfoRsp.soap_default(soap);
	soap_default_cusdk__GetResInfo(soap, &soap_tmp_cusdk__GetResInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetResInfo(soap, &soap_tmp_cusdk__GetResInfo, "cusdk:GetResInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetResInfo(soap_tmp_cusdk__GetResInfo.cResInfoReq, cResInfoRsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	cResInfoRsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || cResInfoRsp.soap_put(soap, "cusdk:ResInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || cResInfoRsp.soap_put(soap, "cusdk:ResInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SearchDevice(cusdkService *soap)
{	struct cusdk__SearchDevice soap_tmp_cusdk__SearchDevice;
	cusdk__SearchDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SearchDevice(soap, &soap_tmp_cusdk__SearchDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SearchDevice(soap, &soap_tmp_cusdk__SearchDevice, "cusdk:SearchDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SearchDevice(soap_tmp_cusdk__SearchDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SearchDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SearchDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetSearchResult(cusdkService *soap)
{	struct cusdk__GetSearchResult soap_tmp_cusdk__GetSearchResult;
	cusdk__GetSearchResultRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetSearchResult(soap, &soap_tmp_cusdk__GetSearchResult);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetSearchResult(soap, &soap_tmp_cusdk__GetSearchResult, "cusdk:GetSearchResult", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSearchResult(soap_tmp_cusdk__GetSearchResult.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetSearchResultRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetSearchResultRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetSearchResultByGroup(cusdkService *soap)
{	struct cusdk__GetSearchResultByGroup soap_tmp_cusdk__GetSearchResultByGroup;
	cusdk__GetSearchResultByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetSearchResultByGroup(soap, &soap_tmp_cusdk__GetSearchResultByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetSearchResultByGroup(soap, &soap_tmp_cusdk__GetSearchResultByGroup, "cusdk:GetSearchResultByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetSearchResultByGroup(soap_tmp_cusdk__GetSearchResultByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetSearchResultByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetSearchResultByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__EndOperation(cusdkService *soap)
{	struct cusdk__EndOperation soap_tmp_cusdk__EndOperation;
	cusdk__EndOperationRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__EndOperation(soap, &soap_tmp_cusdk__EndOperation);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__EndOperation(soap, &soap_tmp_cusdk__EndOperation, "cusdk:EndOperation", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->EndOperation(soap_tmp_cusdk__EndOperation.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:EndOperationRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:EndOperationRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceGroup(cusdkService *soap)
{	struct cusdk__GetDeviceGroup soap_tmp_cusdk__GetDeviceGroup;
	cusdk__GetDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceGroup(soap, &soap_tmp_cusdk__GetDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceGroup(soap, &soap_tmp_cusdk__GetDeviceGroup, "cusdk:GetDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceGroup(soap_tmp_cusdk__GetDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDevice(cusdkService *soap)
{	struct cusdk__GetDevice soap_tmp_cusdk__GetDevice;
	cusdk__GetDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDevice(soap, &soap_tmp_cusdk__GetDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDevice(soap, &soap_tmp_cusdk__GetDevice, "cusdk:GetDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDevice(soap_tmp_cusdk__GetDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceGroupPath(cusdkService *soap)
{	struct cusdk__GetDeviceGroupPath soap_tmp_cusdk__GetDeviceGroupPath;
	cusdk__GetDeviceGroupPathRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceGroupPath(soap, &soap_tmp_cusdk__GetDeviceGroupPath);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceGroupPath(soap, &soap_tmp_cusdk__GetDeviceGroupPath, "cusdk:GetDeviceGroupPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceGroupPath(soap_tmp_cusdk__GetDeviceGroupPath.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceGroupPathRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceGroupPathRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__CreateCustomTreeView(cusdkService *soap)
{	struct cusdk__CreateCustomTreeView soap_tmp_cusdk__CreateCustomTreeView;
	cusdk__CreateCustomTreeViewRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__CreateCustomTreeView(soap, &soap_tmp_cusdk__CreateCustomTreeView);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__CreateCustomTreeView(soap, &soap_tmp_cusdk__CreateCustomTreeView, "cusdk:CreateCustomTreeView", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CreateCustomTreeView(soap_tmp_cusdk__CreateCustomTreeView.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:CreateCustomTreeViewRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:CreateCustomTreeViewRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyCustomTreeViewName(cusdkService *soap)
{	struct cusdk__ModifyCustomTreeViewName soap_tmp_cusdk__ModifyCustomTreeViewName;
	cusdk__ModifyCustomTreeViewNameRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyCustomTreeViewName(soap, &soap_tmp_cusdk__ModifyCustomTreeViewName);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyCustomTreeViewName(soap, &soap_tmp_cusdk__ModifyCustomTreeViewName, "cusdk:ModifyCustomTreeViewName", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyCustomTreeViewName(soap_tmp_cusdk__ModifyCustomTreeViewName.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyCustomTreeViewNameRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyCustomTreeViewNameRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeleteCustomTreeView(cusdkService *soap)
{	struct cusdk__DeleteCustomTreeView soap_tmp_cusdk__DeleteCustomTreeView;
	cusdk__DeleteCustomTreeViewRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeleteCustomTreeView(soap, &soap_tmp_cusdk__DeleteCustomTreeView);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeleteCustomTreeView(soap, &soap_tmp_cusdk__DeleteCustomTreeView, "cusdk:DeleteCustomTreeView", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteCustomTreeView(soap_tmp_cusdk__DeleteCustomTreeView.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeleteCustomTreeViewRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeleteCustomTreeViewRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCustomTreeViewList(cusdkService *soap)
{	struct cusdk__GetCustomTreeViewList soap_tmp_cusdk__GetCustomTreeViewList;
	cusdk__GetCustomTreeViewListRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCustomTreeViewList(soap, &soap_tmp_cusdk__GetCustomTreeViewList);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCustomTreeViewList(soap, &soap_tmp_cusdk__GetCustomTreeViewList, "cusdk:GetCustomTreeViewList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCustomTreeViewList(soap_tmp_cusdk__GetCustomTreeViewList.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCustomTreeViewListRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCustomTreeViewListRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetUserDeviceInGroup(cusdkService *soap)
{	struct cusdk__GetUserDeviceInGroup soap_tmp_cusdk__GetUserDeviceInGroup;
	cusdk__GetUserDeviceInGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetUserDeviceInGroup(soap, &soap_tmp_cusdk__GetUserDeviceInGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetUserDeviceInGroup(soap, &soap_tmp_cusdk__GetUserDeviceInGroup, "cusdk:GetUserDeviceInGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetUserDeviceInGroup(soap_tmp_cusdk__GetUserDeviceInGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetUserDeviceInGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetUserDeviceInGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__BatchOperation(cusdkService *soap)
{	struct cusdk__BatchOperation soap_tmp_cusdk__BatchOperation;
	cusdk__BatchOperationRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__BatchOperation(soap, &soap_tmp_cusdk__BatchOperation);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__BatchOperation(soap, &soap_tmp_cusdk__BatchOperation, "cusdk:BatchOperation", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BatchOperation(soap_tmp_cusdk__BatchOperation.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:BatchOperationRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:BatchOperationRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceGroupVideoSrcNum(cusdkService *soap)
{	struct cusdk__GetDeviceGroupVideoSrcNum soap_tmp_cusdk__GetDeviceGroupVideoSrcNum;
	cusdk__GetDeviceGroupVideoSrcNumRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceGroupVideoSrcNum(soap, &soap_tmp_cusdk__GetDeviceGroupVideoSrcNum);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceGroupVideoSrcNum(soap, &soap_tmp_cusdk__GetDeviceGroupVideoSrcNum, "cusdk:GetDeviceGroupVideoSrcNum", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceGroupVideoSrcNum(soap_tmp_cusdk__GetDeviceGroupVideoSrcNum.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceGroupVideoSrcNumRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceGroupVideoSrcNumRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetVSOfflineInfo(cusdkService *soap)
{	struct cusdk__GetVSOfflineInfo soap_tmp_cusdk__GetVSOfflineInfo;
	cusdk__GetVSOfflineInfoRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetVSOfflineInfo(soap, &soap_tmp_cusdk__GetVSOfflineInfo);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetVSOfflineInfo(soap, &soap_tmp_cusdk__GetVSOfflineInfo, "cusdk:GetVSOfflineInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVSOfflineInfo(soap_tmp_cusdk__GetVSOfflineInfo.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetVSOfflineInfoRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetVSOfflineInfoRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDevAzimuthalAngle(cusdkService *soap)
{	struct cusdk__GetDevAzimuthalAngle soap_tmp_cusdk__GetDevAzimuthalAngle;
	cusdk__GetDevAzimuthalAngleRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDevAzimuthalAngle(soap, &soap_tmp_cusdk__GetDevAzimuthalAngle);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDevAzimuthalAngle(soap, &soap_tmp_cusdk__GetDevAzimuthalAngle, "cusdk:GetDevAzimuthalAngle", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDevAzimuthalAngle(soap_tmp_cusdk__GetDevAzimuthalAngle.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDevAzimuthalAngleRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDevAzimuthalAngleRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeleteRecord(cusdkService *soap)
{	struct cusdk__DeleteRecord soap_tmp_cusdk__DeleteRecord;
	cusdk__DeleteRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeleteRecord(soap, &soap_tmp_cusdk__DeleteRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeleteRecord(soap, &soap_tmp_cusdk__DeleteRecord, "cusdk:DeleteRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteRecord(soap_tmp_cusdk__DeleteRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeleteRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeleteRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__AutoMatchGBId(cusdkService *soap)
{	struct cusdk__AutoMatchGBId soap_tmp_cusdk__AutoMatchGBId;
	cusdk__AutoMatchGBIdRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__AutoMatchGBId(soap, &soap_tmp_cusdk__AutoMatchGBId);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__AutoMatchGBId(soap, &soap_tmp_cusdk__AutoMatchGBId, "cusdk:AutoMatchGBId", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AutoMatchGBId(soap_tmp_cusdk__AutoMatchGBId.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:AutoMatchGBIdRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:AutoMatchGBIdRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetGroupDevSumNum(cusdkService *soap)
{	struct cusdk__GetGroupDevSumNum soap_tmp_cusdk__GetGroupDevSumNum;
	cusdk__GetGroupDevSumNumRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetGroupDevSumNum(soap, &soap_tmp_cusdk__GetGroupDevSumNum);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetGroupDevSumNum(soap, &soap_tmp_cusdk__GetGroupDevSumNum, "cusdk:GetGroupDevSumNum", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetGroupDevSumNum(soap_tmp_cusdk__GetGroupDevSumNum.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetGroupDevSumNumRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetGroupDevSumNumRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyGBDeviceGroup(cusdkService *soap)
{	struct cusdk__ModifyGBDeviceGroup soap_tmp_cusdk__ModifyGBDeviceGroup;
	cusdk__ModifyGBDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyGBDeviceGroup(soap, &soap_tmp_cusdk__ModifyGBDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyGBDeviceGroup(soap, &soap_tmp_cusdk__ModifyGBDeviceGroup, "cusdk:ModifyGBDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyGBDeviceGroup(soap_tmp_cusdk__ModifyGBDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyGBDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyGBDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ModifyGBDevice(cusdkService *soap)
{	struct cusdk__ModifyGBDevice soap_tmp_cusdk__ModifyGBDevice;
	cusdk__ModifyGBDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ModifyGBDevice(soap, &soap_tmp_cusdk__ModifyGBDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ModifyGBDevice(soap, &soap_tmp_cusdk__ModifyGBDevice, "cusdk:ModifyGBDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ModifyGBDevice(soap_tmp_cusdk__ModifyGBDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ModifyGBDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ModifyGBDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StartDevicePush(cusdkService *soap)
{	struct cusdk__StartDevicePush soap_tmp_cusdk__StartDevicePush;
	cusdk__StartDevicePushRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StartDevicePush(soap, &soap_tmp_cusdk__StartDevicePush);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StartDevicePush(soap, &soap_tmp_cusdk__StartDevicePush, "cusdk:StartDevicePush", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StartDevicePush(soap_tmp_cusdk__StartDevicePush.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StartDevicePushRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StartDevicePushRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetGBDeviceByGroup(cusdkService *soap)
{	struct cusdk__GetGBDeviceByGroup soap_tmp_cusdk__GetGBDeviceByGroup;
	cusdk__GetGBDeviceByGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetGBDeviceByGroup(soap, &soap_tmp_cusdk__GetGBDeviceByGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetGBDeviceByGroup(soap, &soap_tmp_cusdk__GetGBDeviceByGroup, "cusdk:GetGBDeviceByGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetGBDeviceByGroup(soap_tmp_cusdk__GetGBDeviceByGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetGBDeviceByGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetGBDeviceByGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SearchGBDevice(cusdkService *soap)
{	struct cusdk__SearchGBDevice soap_tmp_cusdk__SearchGBDevice;
	cusdk__SearchGBDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SearchGBDevice(soap, &soap_tmp_cusdk__SearchGBDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SearchGBDevice(soap, &soap_tmp_cusdk__SearchGBDevice, "cusdk:SearchGBDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SearchGBDevice(soap_tmp_cusdk__SearchGBDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SearchGBDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SearchGBDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SearchGBDeviceGroup(cusdkService *soap)
{	struct cusdk__SearchGBDeviceGroup soap_tmp_cusdk__SearchGBDeviceGroup;
	cusdk__SearchGBDeviceGroupRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SearchGBDeviceGroup(soap, &soap_tmp_cusdk__SearchGBDeviceGroup);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SearchGBDeviceGroup(soap, &soap_tmp_cusdk__SearchGBDeviceGroup, "cusdk:SearchGBDeviceGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SearchGBDeviceGroup(soap_tmp_cusdk__SearchGBDeviceGroup.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SearchGBDeviceGroupRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SearchGBDeviceGroupRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetNextDeviceGBIDError(cusdkService *soap)
{	struct cusdk__GetNextDeviceGBIDError soap_tmp_cusdk__GetNextDeviceGBIDError;
	cusdk__GetNextDeviceGBIDErrorRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetNextDeviceGBIDError(soap, &soap_tmp_cusdk__GetNextDeviceGBIDError);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetNextDeviceGBIDError(soap, &soap_tmp_cusdk__GetNextDeviceGBIDError, "cusdk:GetNextDeviceGBIDError", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetNextDeviceGBIDError(soap_tmp_cusdk__GetNextDeviceGBIDError.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetNextDeviceGBIDErrorRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetNextDeviceGBIDErrorRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetServerConfig(cusdkService *soap)
{	struct cusdk__GetServerConfig soap_tmp_cusdk__GetServerConfig;
	cusdk__GetServerConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetServerConfig(soap, &soap_tmp_cusdk__GetServerConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetServerConfig(soap, &soap_tmp_cusdk__GetServerConfig, "cusdk:GetServerConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetServerConfig(soap_tmp_cusdk__GetServerConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetServerConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetServerConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetServerConfig(cusdkService *soap)
{	struct cusdk__SetServerConfig soap_tmp_cusdk__SetServerConfig;
	cusdk__SetServerConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetServerConfig(soap, &soap_tmp_cusdk__SetServerConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetServerConfig(soap, &soap_tmp_cusdk__SetServerConfig, "cusdk:SetServerConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetServerConfig(soap_tmp_cusdk__SetServerConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetServerConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetServerConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__TVWallClearAlarm(cusdkService *soap)
{	struct cusdk__TVWallClearAlarm soap_tmp_cusdk__TVWallClearAlarm;
	cusdk__TVWallClearAlarmRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__TVWallClearAlarm(soap, &soap_tmp_cusdk__TVWallClearAlarm);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__TVWallClearAlarm(soap, &soap_tmp_cusdk__TVWallClearAlarm, "cusdk:TVWallClearAlarm", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TVWallClearAlarm(soap_tmp_cusdk__TVWallClearAlarm.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:TVWallClearAlarmRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:TVWallClearAlarmRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__LockRecord(cusdkService *soap)
{	struct cusdk__LockRecord soap_tmp_cusdk__LockRecord;
	cusdk__LockRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__LockRecord(soap, &soap_tmp_cusdk__LockRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__LockRecord(soap, &soap_tmp_cusdk__LockRecord, "cusdk:LockRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LockRecord(soap_tmp_cusdk__LockRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:LockRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:LockRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UnlockRecord(cusdkService *soap)
{	struct cusdk__UnlockRecord soap_tmp_cusdk__UnlockRecord;
	cusdk__UnlockRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UnlockRecord(soap, &soap_tmp_cusdk__UnlockRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UnlockRecord(soap, &soap_tmp_cusdk__UnlockRecord, "cusdk:UnlockRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UnlockRecord(soap_tmp_cusdk__UnlockRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UnlockRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UnlockRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetPULongOSD(cusdkService *soap)
{	struct cusdk__GetPULongOSD soap_tmp_cusdk__GetPULongOSD;
	cusdk__GetPULongOSDRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetPULongOSD(soap, &soap_tmp_cusdk__GetPULongOSD);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetPULongOSD(soap, &soap_tmp_cusdk__GetPULongOSD, "cusdk:GetPULongOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetPULongOSD(soap_tmp_cusdk__GetPULongOSD.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetPULongOSDRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetPULongOSDRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetPULongOSD(cusdkService *soap)
{	struct cusdk__SetPULongOSD soap_tmp_cusdk__SetPULongOSD;
	cusdk__SetPULongOSDRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetPULongOSD(soap, &soap_tmp_cusdk__SetPULongOSD);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetPULongOSD(soap, &soap_tmp_cusdk__SetPULongOSD, "cusdk:SetPULongOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetPULongOSD(soap_tmp_cusdk__SetPULongOSD.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetPULongOSDRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetPULongOSDRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceCertificate(cusdkService *soap)
{	struct cusdk__GetDeviceCertificate soap_tmp_cusdk__GetDeviceCertificate;
	cusdk__GetDeviceCertificateRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceCertificate(soap, &soap_tmp_cusdk__GetDeviceCertificate);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceCertificate(soap, &soap_tmp_cusdk__GetDeviceCertificate, "cusdk:GetDeviceCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceCertificate(soap_tmp_cusdk__GetDeviceCertificate.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceCertificateRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceCertificateRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceSignatrueCtrl(cusdkService *soap)
{	struct cusdk__DeviceSignatrueCtrl soap_tmp_cusdk__DeviceSignatrueCtrl;
	cusdk__DeviceSignatrueCtrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceSignatrueCtrl(soap, &soap_tmp_cusdk__DeviceSignatrueCtrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceSignatrueCtrl(soap, &soap_tmp_cusdk__DeviceSignatrueCtrl, "cusdk:DeviceSignatrueCtrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceSignatrueCtrl(soap_tmp_cusdk__DeviceSignatrueCtrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceSignatrueCtrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceSignatrueCtrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__DeviceEncryptionCtrl(cusdkService *soap)
{	struct cusdk__DeviceEncryptionCtrl soap_tmp_cusdk__DeviceEncryptionCtrl;
	cusdk__DeviceEncryptionCtrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__DeviceEncryptionCtrl(soap, &soap_tmp_cusdk__DeviceEncryptionCtrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__DeviceEncryptionCtrl(soap, &soap_tmp_cusdk__DeviceEncryptionCtrl, "cusdk:DeviceEncryptionCtrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeviceEncryptionCtrl(soap_tmp_cusdk__DeviceEncryptionCtrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:DeviceEncryptionCtrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:DeviceEncryptionCtrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__BidirectionalAuth1(cusdkService *soap)
{	struct cusdk__BidirectionalAuth1 soap_tmp_cusdk__BidirectionalAuth1;
	cusdk__BidirectionalAuth1Rsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__BidirectionalAuth1(soap, &soap_tmp_cusdk__BidirectionalAuth1);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__BidirectionalAuth1(soap, &soap_tmp_cusdk__BidirectionalAuth1, "cusdk:BidirectionalAuth1", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BidirectionalAuth1(soap_tmp_cusdk__BidirectionalAuth1.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:BidirectionalAuth1Rsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:BidirectionalAuth1Rsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__BidirectionalAuth2(cusdkService *soap)
{	struct cusdk__BidirectionalAuth2 soap_tmp_cusdk__BidirectionalAuth2;
	cusdk__BidirectionalAuth2Rsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__BidirectionalAuth2(soap, &soap_tmp_cusdk__BidirectionalAuth2);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__BidirectionalAuth2(soap, &soap_tmp_cusdk__BidirectionalAuth2, "cusdk:BidirectionalAuth2", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BidirectionalAuth2(soap_tmp_cusdk__BidirectionalAuth2.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:BidirectionalAuth2Rsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:BidirectionalAuth2Rsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__AdjustVideoSrcOrder(cusdkService *soap)
{	struct cusdk__AdjustVideoSrcOrder soap_tmp_cusdk__AdjustVideoSrcOrder;
	cusdk__AdjustVideoSrcOrderRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__AdjustVideoSrcOrder(soap, &soap_tmp_cusdk__AdjustVideoSrcOrder);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__AdjustVideoSrcOrder(soap, &soap_tmp_cusdk__AdjustVideoSrcOrder, "cusdk:AdjustVideoSrcOrder", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AdjustVideoSrcOrder(soap_tmp_cusdk__AdjustVideoSrcOrder.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:AdjustVideoSrcOrderRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:AdjustVideoSrcOrderRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetAlarmTypes(cusdkService *soap)
{	struct cusdk__GetAlarmTypes soap_tmp_cusdk__GetAlarmTypes;
	cusdk__GetAlarmTypesRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetAlarmTypes(soap, &soap_tmp_cusdk__GetAlarmTypes);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetAlarmTypes(soap, &soap_tmp_cusdk__GetAlarmTypes, "cusdk:GetAlarmTypes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAlarmTypes(soap_tmp_cusdk__GetAlarmTypes.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetAlarmTypesRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetAlarmTypesRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__EliminateAlarm(cusdkService *soap)
{	struct cusdk__EliminateAlarm soap_tmp_cusdk__EliminateAlarm;
	cusdk__EliminateAlarmRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__EliminateAlarm(soap, &soap_tmp_cusdk__EliminateAlarm);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__EliminateAlarm(soap, &soap_tmp_cusdk__EliminateAlarm, "cusdk:EliminateAlarm", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->EliminateAlarm(soap_tmp_cusdk__EliminateAlarm.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:EliminateAlarmRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:EliminateAlarmRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetDeviceRecordsServerUrl(cusdkService *soap)
{	struct cusdk__GetDeviceRecordsServerUrl soap_tmp_cusdk__GetDeviceRecordsServerUrl;
	cusdk__GetDeviceRecordsServerUrlRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetDeviceRecordsServerUrl(soap, &soap_tmp_cusdk__GetDeviceRecordsServerUrl);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetDeviceRecordsServerUrl(soap, &soap_tmp_cusdk__GetDeviceRecordsServerUrl, "cusdk:GetDeviceRecordsServerUrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetDeviceRecordsServerUrl(soap_tmp_cusdk__GetDeviceRecordsServerUrl.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetDeviceRecordsServerUrlRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetDeviceRecordsServerUrlRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__LockRecordBatch(cusdkService *soap)
{	struct cusdk__LockRecordBatch soap_tmp_cusdk__LockRecordBatch;
	cusdk__LockRecordBatchRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__LockRecordBatch(soap, &soap_tmp_cusdk__LockRecordBatch);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__LockRecordBatch(soap, &soap_tmp_cusdk__LockRecordBatch, "cusdk:LockRecordBatch", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LockRecordBatch(soap_tmp_cusdk__LockRecordBatch.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:LockRecordBatchRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:LockRecordBatchRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__UnlockRecordBatch(cusdkService *soap)
{	struct cusdk__UnlockRecordBatch soap_tmp_cusdk__UnlockRecordBatch;
	cusdk__UnlockRecordBatchRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__UnlockRecordBatch(soap, &soap_tmp_cusdk__UnlockRecordBatch);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__UnlockRecordBatch(soap, &soap_tmp_cusdk__UnlockRecordBatch, "cusdk:UnlockRecordBatch", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UnlockRecordBatch(soap_tmp_cusdk__UnlockRecordBatch.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:UnlockRecordBatchRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:UnlockRecordBatchRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryLockedRecord(cusdkService *soap)
{	struct cusdk__QueryLockedRecord soap_tmp_cusdk__QueryLockedRecord;
	cusdk__QueryLockedRecordRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryLockedRecord(soap, &soap_tmp_cusdk__QueryLockedRecord);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryLockedRecord(soap, &soap_tmp_cusdk__QueryLockedRecord, "cusdk:QueryLockedRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryLockedRecord(soap_tmp_cusdk__QueryLockedRecord.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryLockedRecordRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryLockedRecordRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetStreamPreDispatchConfig(cusdkService *soap)
{	struct cusdk__GetStreamPreDispatchConfig soap_tmp_cusdk__GetStreamPreDispatchConfig;
	cusdk__GetStreamPreDispatchConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetStreamPreDispatchConfig(soap, &soap_tmp_cusdk__GetStreamPreDispatchConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetStreamPreDispatchConfig(soap, &soap_tmp_cusdk__GetStreamPreDispatchConfig, "cusdk:GetStreamPreDispatchConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetStreamPreDispatchConfig(soap_tmp_cusdk__GetStreamPreDispatchConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetStreamPreDispatchConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetStreamPreDispatchConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetStreamPreDispatchConfig(cusdkService *soap)
{	struct cusdk__SetStreamPreDispatchConfig soap_tmp_cusdk__SetStreamPreDispatchConfig;
	cusdk__SetStreamPreDispatchConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetStreamPreDispatchConfig(soap, &soap_tmp_cusdk__SetStreamPreDispatchConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetStreamPreDispatchConfig(soap, &soap_tmp_cusdk__SetStreamPreDispatchConfig, "cusdk:SetStreamPreDispatchConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetStreamPreDispatchConfig(soap_tmp_cusdk__SetStreamPreDispatchConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetStreamPreDispatchConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetStreamPreDispatchConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__QueryStreamPreDispatchDevice(cusdkService *soap)
{	struct cusdk__QueryStreamPreDispatchDevice soap_tmp_cusdk__QueryStreamPreDispatchDevice;
	cusdk__QueryStreamPreDispatchDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__QueryStreamPreDispatchDevice(soap, &soap_tmp_cusdk__QueryStreamPreDispatchDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__QueryStreamPreDispatchDevice(soap, &soap_tmp_cusdk__QueryStreamPreDispatchDevice, "cusdk:QueryStreamPreDispatchDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->QueryStreamPreDispatchDevice(soap_tmp_cusdk__QueryStreamPreDispatchDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:QueryStreamPreDispatchDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:QueryStreamPreDispatchDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StreamPreDispatchAddDevice(cusdkService *soap)
{	struct cusdk__StreamPreDispatchAddDevice soap_tmp_cusdk__StreamPreDispatchAddDevice;
	cusdk__StreamPreDispatchAddDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StreamPreDispatchAddDevice(soap, &soap_tmp_cusdk__StreamPreDispatchAddDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StreamPreDispatchAddDevice(soap, &soap_tmp_cusdk__StreamPreDispatchAddDevice, "cusdk:StreamPreDispatchAddDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StreamPreDispatchAddDevice(soap_tmp_cusdk__StreamPreDispatchAddDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StreamPreDispatchAddDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StreamPreDispatchAddDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__StreamPreDispatchDelDevice(cusdkService *soap)
{	struct cusdk__StreamPreDispatchDelDevice soap_tmp_cusdk__StreamPreDispatchDelDevice;
	cusdk__StreamPreDispatchDelDeviceRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__StreamPreDispatchDelDevice(soap, &soap_tmp_cusdk__StreamPreDispatchDelDevice);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__StreamPreDispatchDelDevice(soap, &soap_tmp_cusdk__StreamPreDispatchDelDevice, "cusdk:StreamPreDispatchDelDevice", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->StreamPreDispatchDelDevice(soap_tmp_cusdk__StreamPreDispatchDelDevice.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:StreamPreDispatchDelDeviceRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:StreamPreDispatchDelDeviceRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetEncChnRes(cusdkService *soap)
{	struct cusdk__GetEncChnRes soap_tmp_cusdk__GetEncChnRes;
	cusdk__GetEncChnResRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetEncChnRes(soap, &soap_tmp_cusdk__GetEncChnRes);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetEncChnRes(soap, &soap_tmp_cusdk__GetEncChnRes, "cusdk:GetEncChnRes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetEncChnRes(soap_tmp_cusdk__GetEncChnRes.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetEncChnResRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetEncChnResRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__AllocEncChnRes(cusdkService *soap)
{	struct cusdk__AllocEncChnRes soap_tmp_cusdk__AllocEncChnRes;
	cusdk__AllocEncChnResRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__AllocEncChnRes(soap, &soap_tmp_cusdk__AllocEncChnRes);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__AllocEncChnRes(soap, &soap_tmp_cusdk__AllocEncChnRes, "cusdk:AllocEncChnRes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AllocEncChnRes(soap_tmp_cusdk__AllocEncChnRes.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:AllocEncChnResRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:AllocEncChnResRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__ReleaseEncChnRes(cusdkService *soap)
{	struct cusdk__ReleaseEncChnRes soap_tmp_cusdk__ReleaseEncChnRes;
	cusdk__ReleaseEncChnResRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__ReleaseEncChnRes(soap, &soap_tmp_cusdk__ReleaseEncChnRes);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__ReleaseEncChnRes(soap, &soap_tmp_cusdk__ReleaseEncChnRes, "cusdk:ReleaseEncChnRes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ReleaseEncChnRes(soap_tmp_cusdk__ReleaseEncChnRes.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:ReleaseEncChnResRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:ReleaseEncChnResRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GBPuTransdataSsSet(cusdkService *soap)
{	struct cusdk__GBPuTransdataSsSet soap_tmp_cusdk__GBPuTransdataSsSet;
	cusdk__GBPuTransdataSsSetRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GBPuTransdataSsSet(soap, &soap_tmp_cusdk__GBPuTransdataSsSet);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GBPuTransdataSsSet(soap, &soap_tmp_cusdk__GBPuTransdataSsSet, "cusdk:GBPuTransdataSsSet", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GBPuTransdataSsSet(soap_tmp_cusdk__GBPuTransdataSsSet.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GBPuTransdataSsSetRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GBPuTransdataSsSetRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetGBDomainPrivilege(cusdkService *soap)
{	struct cusdk__GetGBDomainPrivilege soap_tmp_cusdk__GetGBDomainPrivilege;
	cusdk__GetGBDomainPrivilegeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetGBDomainPrivilege(soap, &soap_tmp_cusdk__GetGBDomainPrivilege);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetGBDomainPrivilege(soap, &soap_tmp_cusdk__GetGBDomainPrivilege, "cusdk:GetGBDomainPrivilege", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetGBDomainPrivilege(soap_tmp_cusdk__GetGBDomainPrivilege.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetGBDomainPrivilegeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetGBDomainPrivilegeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetGBDomainPrivilege(cusdkService *soap)
{	struct cusdk__SetGBDomainPrivilege soap_tmp_cusdk__SetGBDomainPrivilege;
	cusdk__SetGBDomainPrivilegeRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetGBDomainPrivilege(soap, &soap_tmp_cusdk__SetGBDomainPrivilege);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetGBDomainPrivilege(soap, &soap_tmp_cusdk__SetGBDomainPrivilege, "cusdk:SetGBDomainPrivilege", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetGBDomainPrivilege(soap_tmp_cusdk__SetGBDomainPrivilege.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetGBDomainPrivilegeRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetGBDomainPrivilegeRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetGBConfig(cusdkService *soap)
{	struct cusdk__GetGBConfig soap_tmp_cusdk__GetGBConfig;
	cusdk__GetGBConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetGBConfig(soap, &soap_tmp_cusdk__GetGBConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetGBConfig(soap, &soap_tmp_cusdk__GetGBConfig, "cusdk:GetGBConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetGBConfig(soap_tmp_cusdk__GetGBConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetGBConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetGBConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetGBConfig(cusdkService *soap)
{	struct cusdk__SetGBConfig soap_tmp_cusdk__SetGBConfig;
	cusdk__SetGBConfigRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetGBConfig(soap, &soap_tmp_cusdk__SetGBConfig);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetGBConfig(soap, &soap_tmp_cusdk__SetGBConfig, "cusdk:SetGBConfig", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetGBConfig(soap_tmp_cusdk__SetGBConfig.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetGBConfigRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetGBConfigRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__SetCertificate(cusdkService *soap)
{	struct cusdk__SetCertificate soap_tmp_cusdk__SetCertificate;
	cusdk__SetCertificateRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__SetCertificate(soap, &soap_tmp_cusdk__SetCertificate);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__SetCertificate(soap, &soap_tmp_cusdk__SetCertificate, "cusdk:SetCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SetCertificate(soap_tmp_cusdk__SetCertificate.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:SetCertificateRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:SetCertificateRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_cusdk__GetCertificate(cusdkService *soap)
{	struct cusdk__GetCertificate soap_tmp_cusdk__GetCertificate;
	cusdk__GetCertificateRsp rsp;
	rsp.soap_default(soap);
	soap_default_cusdk__GetCertificate(soap, &soap_tmp_cusdk__GetCertificate);
	soap->encodingStyle = NULL;
	if (!soap_get_cusdk__GetCertificate(soap, &soap_tmp_cusdk__GetCertificate, "cusdk:GetCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetCertificate(soap_tmp_cusdk__GetCertificate.req, rsp);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	rsp.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || rsp.soap_put(soap, "cusdk:GetCertificateRsp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || rsp.soap_put(soap, "cusdk:GetCertificateRsp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
